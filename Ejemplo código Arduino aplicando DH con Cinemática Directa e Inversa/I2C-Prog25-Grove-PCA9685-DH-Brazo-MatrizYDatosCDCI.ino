// I2C-Prog22-Grove-PCA9685-UBEC-DH-Motores-Brazo-MatrizYDatosCinemáticaDirecta
// El código hace uso de PCA9685 con 16 canales y conectado a un Arduino vía I2C, 
// y un dispositivo UBEC ("Mini Power DP UBEC PRO") para 8 canales a los que se conectan  
// varios motores. Algunos motores con salidas directas desde el PCA9685 y otros desde
// el UBEC que recibe las señales del Arduino a través del propio PCA9685.
// Las entradas de corriente del PCA9685 y del UBEC serán independientes para poder llegar a 
// alcanzar el pico de corriente de cada motor.
// Funciona igualmente sin el UBEC instalado y usando directamente un dispositivo PCA9685.
// Ahora se añade el algoritmo de Denavit-Hartenberg. Para ello se añade el algoritmo en el que 
// se introducirán los datos de cada articulación para calcular los parámetros de Denavit-Hartenberg.
// Una vez calculados estos parámetros se introducirán en las matrices correspondientes junto con 
// los valores de los ángulos que conforman esas matrices, para determinar la posición final del 
// extremno del brazo. 
// En la versión "I2C-Prog21-Grove-PCA9685-UBEC-DH-Motores-Brazo-DatosEnVectores,ino" se usan las 
// estructuras de los vectores de datos iniciales de “P20.ino” para la definición de los pulsos 
// de los servomotores, para racionalizar la definición de datos y que se parezca a lo ya utilizado
// con anterioridad.
// En esta versión se introducen datos y se aplican a las matrices de DH para el caso de cinemática directa.
// También se calcula la posición del extremo del brazo aplicando las matrices de DH para compararlo 
// con la realidad al ser ejecutado sobre el brazo robótico.
#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>
Adafruit_PWMServoDriver servos = Adafruit_PWMServoDriver(0x42); // Una única tarjeta PCA9685 para la gestión de los motores

//****************************************************************************************
//****************************************************************************************
double imprimir0 = 1;
double anguloPlanoDeAtaque = PI/6; //PI/9; 0; // Por elección del ángulo del plano de ataque **** 
// Por defecto el brazo debería estar en vertical (Teta2=0). // // Se comienza a girar en el eje positivo de Y.
double coefAnguloDeAtaque = 0; // Coeficiente para hacer más agudo Teta5 cuanto más pequeña sea la distancia entre O' y el punto final de destino hasta, por ejemplo, hacerlo vertical como ángulo de ataque)
// Si vale 0, será proporcional a la distancia de P2. El máximo debería ser inferior a 3.5.
double A;
double B;
double C;
double Option = 9; // Las opciones se ven a continuación.
double Option2 = 0; // No se cambia porque se cambiará por "Option" en la opción 9 (calDHinversoNmotores_1_0), y se usa dentro de la misma función. 
    // Ejemplo 1-0 - (Option2=0 sin fallo) Muestra el fallo en Teta1 (Option=12) o Teta3 (Option=13) y que no falla en Teta4 (Option=14). Pero con Teta2=0 van bien.
//Option = 1 // Prueba del sentido de los movimientos.
    // pruebaDeMovimientosCD() - Define 4 posiciones con ángulos diferentes, mueve el brazo y calcula los puntos por DH. 
//Option = 2 // Sólo se calculan los vértices de un cuadrado mediante Cinemática Directa ()matriz de parámetros de DH), pero no se mueve el brazo.
    // dibujarCuadradoCD() - Se definen puntos de los vértices de un cuadrado mediante Cinemática Directa y calcula los datos de posición. 
    //double puntoF[] = {0, 100, 500};  // {0, 0, 631}; // Para cinemática directa
//Option = 3 // Se dibuja un cuadrado mediante Cinemática Inversa
    // dibujarCuadradoCI() - Usa calDHinversoNmotores_3_1() con datos de puntos de los vértices mediante de un cuadrado mediante Cinemática Directa y calcula los datos de posición.
    // El tercer punto del cuadrado superior tiene el codo hacia abajo. 
//Option = 4 // Se dibuja una circunferencia mediante Cinemática Directa
    // dibujarCircunferenciaCD() - Va sumando de grado en grado y calcula los datos de cada posición con calDHdirectoNmotores(). 
//Option = 5 // Se dibuja una circunferencia mediante Cinemática Inversa
    // dibujarCircunferenciaCI() - Usa calDHinversoNmotores_3_1() con datos de puntos sacados de la ecuación de una circunferencia y calcula los datos de cada posición con calDHdirectoNmotores().
//****************************************************************************************
//Option = 6 // Cálculo de las ecuaciones de DH para Cinemática Directa 
    // Sólo se trata de hacer el cálculo de DH, sin más. Y la posición de la que proviene es la de inicio mediante setServos01234() (verical con todos los motores a 0º)
    // Para modificarlo, antes habría que definir un punto punto6[] y ejecutar calDHinversoNmotores_i_j o definir un ángulo y ejecutar alguna función con CD.
    // Es una base para futuros usos.
    // Ya se ha usado en otras opciones para el cálculo de los puntos por DH. 
    double puntoF6[] = {0, 0, 0}; // Da igual el punto porque no lo usa... 
//****************************************************************************************
//Option = 7 // Ejemplo 3-1 - Tres motores, con el primer motor perpendicular al suelo, y el resto perpendicular al primero. Ecuaciones de DH para Cinemática Inversa.   
    // calDHinversoNmotores_3_1() - Se calculan los puntos y se buscan mediante calDHinversoNmotores_4_0(), se mueve el brazo y se calculan pro DH para comprobarlo. 
    double puntoF7[] = {200, 200, 300}; // Y0 positivas a izquierda (90) y negativas a derecha (-90) // X0 positivas detrás (90) y negativas delante (-90)
//Option = 8 // (SIN HACER) Ejemplo 4-0 - Exápodo - // Ejemplo 4-0 - Cuadrípodo - Cuatro motores. Ecuaciones de DH para Cinemática Inversa.
    // calDHinversoNmotores_4_0() - Se calculan los puntos y se buscan mediante calDHinversoNmotores_4_0(), se mueve el brazo y se calculan pro DH para comprobarlo. 
    double puntoF8[] = {200, 200, 300}; // Y0 positivas a izquierda (90) y negativas a derecha (-90) // X0 positivas detrás (90) y negativas delante (-90)
//****************************************************************************************  
//Option = 9// Ejemplo 1-0 (calDHinversoNmotores_1_0()) - Brazo completo - Cinco motores. Ecuaciones de DH para Cinemática Inversa.
    // dibujarCuadradoCI_1_0() - Se calculan los puntos y se buscan mediante calDHinversoNmotores_1_0(), se mueve el brazo y se calculan pro DH para comprobarlo.
    //double puntoF9[] = {0, -100, 500};// anguloPlanoDeAtaque = PI/6 // Fuera de alcance por raíz negativa en Teta1 // var331= nan // resulTeta1_2grados_2= nan
    //double puntoF9[] = {-10, -10, 300}; // Resultados erróneos // En la primera versión de Teta1 es inalcanzable en Teta1. Demasiado cerca del eje del brazo. No va bien cuando la distancia en horizontal es menor que L3.
    //double puntoF9[] = {-10, -10, 400}; // anguloPlanoDeAtaque = PI/6 //Raís negativa en Teta1 // var331= nan
    //double puntoF9[] = {-20, 20, 400}; // anguloPlanoDeAtaque = PI/6 //Raíz negativa en Teta1 // var331= nan
    //double puntoF9[] = {-150, -10, -60}; // anguloPlanoDeAtaque = PI/6 // No llega por tope en los motores.
    //double puntoF9[] = {-150, -150, 250}; // Falla
    //double puntoF9[] = {-70, -70, 70}; // Y0 positivas a izquierda (90) y negativas a derecha (-90) // X0 positivas detrás (90) y negativas delante (-90)

    double puntoF9[] = {-100, -100, 100}; // Y0 positivas a izquierda (90) y negativas a derecha (-90) // X0 positivas detrás (90) y negativas delante (-90)
    double puntoF9_2[] = {0, 0, 5}; // Punto relativo al último Sistema de Coordenadas (extremo del brazo)
    
//Option = 10 // Calcula los puntos de una circunferencia y posicione el brazo en cada punto (grado) mediante Cinemática Inversa
//Option = 11 // Calcula los puntos de un cuadrado y posicione el brazo en los vértices mediante Cinemática Inversa
//Option = 12 // Ejemplo 1-0 (calDHinversoNmotores_1_0()) - Variante de Teta1 con fallo por no considerar el plano de ataque
//Option = 13 // Ejemplo 1-0 (calDHinversoNmotores_1_0()) - Variante de Teta3 con fallo por no considerar el plano de ataque
//Option = 14 // Ejemplo 1-0 (calDHinversoNmotores_1_0()) - Variante de Teta4 sin fallo 

//****************************************************************************************
//************************************************************************************************
// Datos a modificar en cada problema:
const byte numart = 5; //Número de motores = número de filas de la matriz DH con 4 columnas. Se puede sólo hasta 7 articulaciones
                                                          // para corregir los grados no incluidos por tener motores no usados y codos no tenidos en cuenta. 0
//*********************************************************************************************************************************************************
//double pasarang0[] = {0, -90, 0, 0, 0, 0, 0, 0, 0, 0}; // Angulos a sumar para igualar los 0 de cada motor ya que debe dar 90º en los motores por ser el punto medio.
double pasarang0[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; // Angulos a sumar para igualar los 0 de cada motor ya que debe dar 90º en los motores por ser el punto medio.
double GiroCalculado[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; // Ángulo a girar por cada motor tras ser calculado por DH y otros procedimientos como SCARA. 
double GiroModificado[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; // Ángulo a girar por cada motor tras ser calculado por DH y otros procedimientos como SCARA. Se usa 
// SI SE CAMBIA ESE 90 POR 0 SE NECESITA HACER EL CAMBIO DE LOS 90º (COS POR -SIN), PERO SI SE MANTIENE A 90 NO HARIA FALTA ESE CAMBIO. 
// TAL Y COMO ESTÁ EL CÓDIGO, TENDRÍA QUE PONER 0. PERO HAY QUE PROBARLO.
// HAY QUE PROBAR SI CALCULA BIEN LOS PUNTOS AL ESTAR CALCULADOS POR DH.......
//double DHbi[] = {0, 90, 0, 0, 0, 0, 0, 0, 0, 0}; // Valores de los datos bi de DH de seguridad para mantener siempre los mismos parámetros
// 90º en segundo motor - Va con: double pasarang0[] = {0, -90, 0, 0, 0, 0, 0, 0, 0, 0}; // Angulos a sumar para igualar los 0 de cada motor ya que debe dar 90º en los motores por ser el punto medio.
double DHbi[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; // Valores de los datos bi de DH de seguridad para mantener siempre los mismos parámetros
// 0º en segundo motor - Va con: double pasarang0[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; // Angulos a sumar para igualar los 0 de cada motor ya que debe dar 90º en los motores por ser el punto medio.
//*********************************************************************************************************************************************************
//****************************************************************************************
int DH[] = {1, 1, 1, 1, 1, 0, 0, 0, 0, 0}; // 1:motor ; 0:codo (Se prepara así por si en algún momento se implementa la posibilidad de meter un codo sin motor, sólo desplazamiento)
//int DH[10]; // Se inicializan los arrays generales
double DHdimodificado[10];
double DHrimodificado[10];
int DH_3_1[] = {1, 0, 1, 1, 0, 0, 0, 0, 0, 0}; // Se inicializan los arrays de cada ejemplo a introducir en los arrays generales
double DHdimodificado_3_1[] = {236, 0, 0, 0, 0, 0, 0, 0, 0, 0};
double DHrimodificado_3_1[] = {0, 0, 105, 290, 0, 0, 0, 0, 0, 0};
int DH_4_0[] = {0, 1, 1, 1, 0, 0, 0, 0, 0, 0};
double DHdimodificado_4_0[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
double DHrimodificado_4_0[] = {218, 18, 105, 290, 0, 0, 0, 0, 0, 0};
int DH_1_0[] = {1, 1, 1, 1, 1, 0, 0, 0, 0, 0};
double DHdimodificado_1_0[] = {218, 24.5, 33, 0, 0, 0, 0, 0, 0, 0};
double DHrimodificado_1_0[] = {0, 18, 105, 118, 172, 0, 0, 0, 0, 0};
double L0; // Se definen las variables generales a usar en todos los ejemplos
double L1;
double L2;
double L3; 
double L2p;
double L3p; 
double L4; 
double L5; //double L6; //double L7; //double L8; //double L9; //double L10;
void Datos(){ // Se definen las variables generales desde los valores particulares de cada ejemplo, dependiendo de la opción del menú escogida.
  // Ejemplo 3-1 - Tres motores con el primero perpendicular al suelo. // Variables para Option=7 en Ejemplo 3-1. /* 
  if ((Option == 3) or (Option == 5) or (Option == 7)) {
    for (int i = 0; i < 10; i = i + 1) { // Se redefinen los arrays generales desde los arrays de cada ejemplo 
      DH[i]=DH_3_1[i];
      DHdimodificado[i]=DHdimodificado_3_1[i];
      DHrimodificado[i]=DHrimodificado_3_1[i];
    } // Termina el for (i)
    L1=DHdimodificado[0]; // Se redefinen las variables generales a usar en cada ejemplo desde los arrays de cada ejemplo. 
    L2=DHrimodificado[2];
    L3=DHrimodificado[3];
  }
  //************************************************************************************************
  // SIN HACER // Ejemplo 4-0 - Tres motores con el primero paralelo al suelo. Se considera además que está a nivel del suelo.
  // Variables para Option=7 en Ejemplo 3-1.  
  if (Option == 8) { // Podrían considerarse los 4 motores o sólo los 3 últimos.
    for (int i = 0; i < 10; i = i + 1) { // Se redefinen los arrays generales desde los arrays de cada ejemplo
      DH[i]=DH_4_0[i];
      DHdimodificado[i]=DHdimodificado_4_0[i];
      DHrimodificado[i]=DHrimodificado_4_0[i];
    } // Termina el for (i)
    L1=DHrimodificado[0]; // Se redefinen las variables generales a usar en cada ejemplo desde los arrays de cada ejemplo. 
    L2=DHrimodificado[1];
    L3=DHrimodificado[2]; //L4=DHrimodificado[x]; //double L5=DHrimodificado[x]; //double L6=DHrimodificado[x]; //double L7=DHrimodificado[x]; //double L8=DHrimodificado[x]; //double L9=DHrimodificado[x]; //double L10=DHrimodificado[x];
  }
  // Fin de variables para Option=8 en Ejemplo 4-0.
  //************************************************************************************************
  // Ejemplo 1-0 - Cinco motores. // Variables para Option=9 en Ejemplo 1-0. 
  if ((Option == 9) or (Option == 10) or (Option == 11) or (Option == 12) or (Option == 13) or (Option == 14)) {
    for (int i = 0; i < 10; i = i + 1) { // Se redefinen los arrays generales desde los arrays de cada ejemplo
      DH[i]=DH_1_0[i];
      DHdimodificado[i]=DHdimodificado_1_0[i];
      DHrimodificado[i]=DHrimodificado_1_0[i];
    } // Termina el for (i)
    L1=DHdimodificado[0]; // Se redefinen las variables generales a usar en cada ejemplo desde los arrays de cada ejemplo. 
    L2=DHdimodificado[1];
    L3=DHdimodificado[2]; 
    L2p=DHrimodificado[1];
    L3p=DHrimodificado[2]; 
    L4=DHrimodificado[3]; 
    L5=DHrimodificado[4]; //L6=DHrimodificado[x]; //L7=DHrimodificado[x]; //L8=DHrimodificado[x]; //L9=DHrimodificado[x]; //L10=DHrimodificado[x];
  }
  // Fin de variables para Option=9 en Ejemplo 1-0.  
}

//************************************************************************************************
//************************************************************************************************
// Se definen los valores de los pulsos, y sus equivalentes en grados, de todos los motores
double limMin[] =    {230, 230, 260, 200, 225, 0, 0, 0, 0, 0}; // Límites mínimos en pulsos de cada motor. Por debajo se daña o da vueltas sin parar.
double limMax[] =    {570, 570, 570, 515, 540, 0, 0, 0, 0, 0}; // Límites máximos en pulsos de cada motor. Por encima se daña o da vueltas sin parar.
double msec0[] =     {400, 400, 415, 357, 382, 0, 0, 0, 0, 0}; // Pulsos de cada motor equivalente a "0" grados (reposo). 
double msecMin[] =   {240, 240, 270, 210, 235, 0, 0, 0, 0, 0}; // Mínimos pulsos de cada motor. Es equivalente al array angMin[]. 
double msecMax[] =   {560, 560, 560, 505, 530, 0, 0, 0, 0, 0}; // Máximos pulsos de cada motor. Es equivalente al array angMax[]. 
double angMin[] =    { -90, 90, -90,  90, -90, 0, 0, 0, 0, 0}; // Mínimos ángulos de cada motor. Es equivalente a msecMin[].
double angMax[] =    {  90, -90, 90, -90,  90, 0, 0, 0, 0, 0}; // Máximos ángulos de cada motor. Es equivalente a msecMax[].
double msecMotor[numart];
double angMotor[numart];
//************************************************************************************************
// Se definen las componentes de la matriz A
double varDH00=0; double varDH01=0; double varDH02=0; double varDH03=0;
double varDH10=0; double varDH11=0; double varDH12=0; double varDH13=0;
double varDH20=0; double varDH21=0; double varDH22=0; double varDH23=0;
double varDH30=0; double varDH31=0; double varDH32=0; double varDH33=1;

double varDH00_2=0; double varDH01_2=0; double varDH02_2=0; double varDH03_2=0;
double varDH10_2=0; double varDH11_2=0; double varDH12_2=0; double varDH13_2=0;
double varDH20_2=0; double varDH21_2=0; double varDH22_2=0; double varDH23_2=0;
double varDH30_2=0; double varDH31_2=0; double varDH32_2=0; double varDH33_2=1;

// Se definen los valores del punto a localizar en el extremo
double Puntox0 = 0;  double Puntoy0 = 0;  double Puntoz0 = 0; // Punto relativo al último sistema de coordenadas en relación a la base (Sin cambio de 90º)
double Puntox0_2 = 0;  double Puntoy0_2 = 0;  double Puntoz0_2 = 0; // Punto relativo al último sistema de coordenadas en relación a la base (Con cambio de 90º) 
//************************************************************************************************
// Se definen los parámetros de la matriz DH a través de vectores de tantos datos como articulaciones tiene el brazo. Estos valores podrán
// ser fijos para hacer las pruebas, pero variarán en la medida que se definan nuevos datos para alcanzar puntos diferentes con el extremo. 
// Una opción posible sería que realizaran un círulo modificando los valores de θi, di, ai o αi. 
// En el caso de hacer las pruebas de cinemática inversa se calcularían los puntos finales o la trayectoria, y con estos puntos se 
// calcularían los valores de θi, di, ai o αi. Por ejemplo ser podría calcular la trayectoria de un círculo a cierta altura.
// Se van a definir los parámetros de DH para el caso de 5 articulaciones y se meten 7 datos para prepararlo para 7 articulaciones:
//*****************************************
// Ejemplo 1.0
//double DHbi[] = {0, 90, 0, 0, 0, 0, 0, 0, 0, 0}; // Valores de los datos bi de DH de seguridad para mantener siempre los mismos parámetros
//double DHbi2[] = {0, 90, 0, 0, 0, 0, 0, 0, 0, 0}; // Valores de los datos bi de DH para calcular el punto final
//double DHdi[] = {218, 24.5, 33, 0, 0, 0, 0, 0, 0, 0}; // Valores de los datos di de DH 
//double DHri[] = {0, 18, 105, 118, 172, 0, 0, 0, 0, 0}; // Valores de los datos ri de DH 
// Ejemplo 3.1
double DHbi2[] = {0, 90, 0, 0, 0, 0, 0, 0, 0, 0}; // Valores de los datos bi de DH para calcular el punto final
double DHdi[] = {218, 24.5, 33, 0, 0, 0, 0, 0, 0, 0}; // Valores de los datos di de DH 
double DHri[] = {0, 18, 105, 118, 172, 0, 0, 0, 0, 0}; // Valores de los datos ri de DH 
double DHai[] = {90, 90, 0, 0, 0, 0, 0, 0, 0, 0}; // Valores de los datos ai de DH 
//double DHdi[] = {236, 0, 0, 0, 0, 0, 0, 0, 0, 0}; // Valores de los datos di de DH para pruebas de diferentes número de motores con algunos rotando y otros en posición de reposo. 
//double DHri[] = {0, 0, 105, 290, 0, 0, 0, 0, 0, 0}; // Valores de los datos ri de DH para pruebas de diferentes número de motores con algunos rotando y otros en posición de reposo. 
double b1; double b2; double b3; double b4; double b5; double b6; double b7; 
double d1; double d2; double d3; double d4; double d5; double d6; double d7;
double r1; double r2; double r3; double r4; double r5; double r6; double r7;
double a1; double a2; double a3; double a4; double a5; double a6; double a7;

double Teta1ORIInverso = 0; // Error en ángulo Teta1 de calDHinversoNmotores_1_0(). Si se produce este error no se mueve el brazo y quedará en reposo (vertical).
double Teta1ALTInverso = 0; // Error en ángulo Teta1 de calDHinversoNmotores_1_0(). Si se produce este error no se mueve el brazo y quedará en reposo (vertical).

//************************************************************************************************
//************************************************************************************************

// Funciones comunes para cinemática directa e inversa
double radianesAGrados(double radianes) { // Pasa ángulos en radianes a grados – Datos: Radianes
  return radianes * (180.0 / PI);
}
double gradosARadianes(double& grados) { // Pasa ángulos en radianes a grados – Datos: Grados
  return grados * PI / 180.0;
}

//************************************************************************************************
// Función de inicialización de motores
// Se inicializan los valores de las equivalencias entre el rango de grados y el rango de pulsos.
void setServos01234(){
  delay(1000);
  int i=0; // Índice para hacer el seguimiento de articulaciones con motores
//msec0 - msecMin - msecMax - angMin - angMax
// Se ha cambiado los signos de los ángulos 0 y 180... en el motor 1 (segundo motor)
  for (i = 0; i < numart; i = i + 1) {
    servos.setPWM(i, 0, msec0[i]); // int setbounds(int servo, int minposition, int maxposition); (Returns 0 if successfully set; returns 1 if instruction failed) // Adafruit
    msecMotor[i] = msec0[i];
    // Metemos en "angMotor[i]" el valor del ángulo extrapolado desde "msec0[i]" para inicializar los valores desde la posición de reposo.
    angMotor[i] = map(msecMotor[i], msecMin[i], msecMax[i], angMin[i], angMax[i]); // ángulo calculado = map(pulso a transformar, pulso mínimo, pulso máximo, ángulo mínimo, ángulo máximo)
    if (imprimir0 == 1) {Serial.print(F("i = "));Serial.print(i); // i recorre todos los motores: 0, 1, 2, 3, 4, 5, 6,...
      Serial.print(F(" - msecMotor: "));Serial.print(msecMotor[i]); Serial.print(F(" - angMotor: "));Serial.print(angMotor[i]); 
      Serial.print(F(" - msec(Min-Max): "));Serial.print(msecMin[i]);Serial.print(F("-"));Serial.print(msecMax[i]);
      Serial.print(F(" - áng(Min-Max): "));Serial.print(angMin[i]);Serial.print(F("-"));Serial.println(angMax[i]);
    }
  } // Termina el for (i)
}

//************************************************************************************************
// Ejemplo 3-1 - Funciones de prueba de los motores en Cinemática Directa
// Se inicializan los valores de las equivalencias entre el rango de grados y el rango de pulsos.
void calDHdirectoNmotores() {
  Serial.println(F("*************** calDHdirectoNmotores ***************"));
  int j; // Índice para hacer el seguimiento de articulaciones totales
  // Se ha cambiado los signos de los ángulos 0 y 180... en el motor 1 (segundo motor)
  for (j = 0; j < numart; j = j + 1) { // Se prepara así por si en algún momento se implementa la posibilidad de meter un codo sin motor, sólo desplazamiento.
    // Metemos en "angMotor[j]" el valor final del ángulo a girar en el motor
      angMotor[j] = DHbi[j]+pasarang0[j]+GiroCalculado[j]+GiroModificado[j];// DHai[j] en realidad, no hace falta porque sólo gira sobre un único eje. GiroCalculado[j] es el águlo calculado para cada motor en Cinmática Inversa.
      msecMotor[j] = map(angMotor[j], angMin[j], angMax[j], msecMin[j], msecMax[j]); // pulso calculado = map(ángulo a transformar, ángulo mínimo, ángulo máximo, pulso mínimo, pulso máximo)
      DHbi2[j] = DHbi[j]+GiroCalculado[j]; // Este valor es el que se usa para el cálculo del punto mientras que msecMotor[j] es el valor del ángulo corregido para ajustar el 90º.
    if (DH[j] != 1){
      if (imprimir0 == 1) {
        Serial.print(F("Esta articulación no es un motor")); 
      }
    }
    if (imprimir0 == 1) {
      Serial.print(F("j = "));Serial.print(j); // j recorre las articulaciones que correspondan: 0, 1, 2, 3, 4, 5, 6,...
      Serial.print(F(" - msecMotor[j] final: "));Serial.print(msecMotor[j]); Serial.print(F(" - angMotor[j]= "));Serial.print(angMotor[j]);
      Serial.print(F(" - DHbi2[j]: "));Serial.print(DHbi2[j]); Serial.print(F(" - pasarang0[j]: "));Serial.print(pasarang0[j]);
      Serial.print(F(" - GiroCalculado[j]: "));Serial.print(GiroCalculado[j]);
      Serial.print(F(" - GiroModificado[j]: "));Serial.println(GiroModificado[j]);
    } // Termina el if (imprimir0 == 1)
  } // Termina el for (j)

//  b1 = gradosARadianes(angMotor[0]); b2 = gradosARadianes(angMotor[1]); b3 = gradosARadianes(angMotor[2]); b4 = gradosARadianes(angMotor[3]); b5 = gradosARadianes(angMotor[4]); b6 = gradosARadianes(angMotor[5]); b7 = gradosARadianes(angMotor[6]); 
  b1 = gradosARadianes(DHbi2[0]); b2 = gradosARadianes(DHbi2[1]); b3 = gradosARadianes(DHbi2[2]); b4 = gradosARadianes(DHbi2[3]); b5 = gradosARadianes(DHbi2[4]); b6 = gradosARadianes(DHbi2[5]); b7 = gradosARadianes(DHbi2[6]); 
  d1 = DHdi[0]; d2 = DHdi[1]; d3 = DHdi[2]; d4 = DHdi[3]; d5 = DHdi[4]; d6 = DHdi[5]; d7 = DHdi[6];
  r1 = DHri[0]; r2 = DHri[1]; r3 = DHri[2]; r4 = DHri[3]; r5 = DHri[4]; r6 = DHri[5]; r7 = DHri[6];
  a1 = gradosARadianes(DHai[0]); a2 = gradosARadianes(DHai[1]); a3 = gradosARadianes(DHai[2]); a4 = gradosARadianes(DHai[3]); a5 = gradosARadianes(DHai[4]); a6 = gradosARadianes(DHai[5]); a7 = gradosARadianes(DHai[6]);

  // Se definen los valores básicos de la matriz DH (bi, di, ri, ai) para 1 articulación. Salen de multiplicar las matrices según la definición de los parámetros de Denavit-Hartenberg.
  if (numart == 1) {
    varDH00 = ((cos(b1))) ;
    varDH01 = (((-sin(b1))*cos(a1))) ;
    varDH02 = (((-sin(b1))*(-sin(a1)))) ; 
    varDH03 = ((cos(b1)*r1));
    varDH10 = ((sin(b1))) ;
    varDH11 = ((cos(b1)*cos(a1))) ;
    varDH12 = ((cos(b1)*(-sin(a1)))) ;
    varDH13 = ((sin(b1)*r1));
    varDH20 = 0;
    varDH21 = ((sin(a1))) ;
    varDH22 = ((cos(a1))) ;
    varDH23 = ((d1));
  }
  // Se definen los valores básicos de la matriz DH (bi, di, ri, ai) para 2 articulaciones. Salen de multiplicar las matrices según la definición de los parámetros de Denavit-Hartenberg.
  if (numart == 2) {
    varDH00 = (((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2))) ;
    varDH01 = (((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2))) ;
    varDH02 = (((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2))) ; 
    varDH03 = (((cos(b1)))*(cos(b2)*r2)+(((-sin(b1))*cos(a1)))*(sin(b2)*r2)+(((-sin(b1))*(-sin(a1))))*(d2)+((cos(b1)*r1)));
    varDH10 = (((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2))) ;
    varDH11 = (((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2))) ;
    varDH12 = (((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2))) ;
    varDH13 = (((sin(b1)))*(cos(b2)*r2)+((cos(b1)*cos(a1)))*(sin(b2)*r2)+((cos(b1)*(-sin(a1))))*(d2)+((sin(b1)*r1)));
    varDH20 = (((sin(a1)))*(sin(b2))) ;
    varDH21 = (((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2))) ;
    varDH22 = (((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2))) ;
    varDH23 = (((sin(a1)))*(sin(b2)*r2)+((cos(a1)))*(d2)+((d1)));
  }
  // Se definen los valores básicos de la matriz DH (bi, di, ri, ai) para 3 articulaciones. Salen de multiplicar las matrices según la definición de los parámetros de Denavit-Hartenberg.
  if (numart == 3) {
    varDH00 = ((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3))) ;
    varDH01 = ((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3))) ;
    varDH02 = ((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3))) ; 
    varDH03 = ((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3)*r3)+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)*r3)+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(d3)+(((cos(b1)))*(cos(b2)*r2)+(((-sin(b1))*cos(a1)))*(sin(b2)*r2)+(((-sin(b1))*(-sin(a1))))*(d2)+((cos(b1)*r1))));
    varDH10 = ((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3))) ;
    varDH11 = ((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3))) ;
    varDH12 = ((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3))) ;
    varDH13 = ((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3)*r3)+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)*r3)+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(d3)+(((sin(b1)))*(cos(b2)*r2)+((cos(b1)*cos(a1)))*(sin(b2)*r2)+((cos(b1)*(-sin(a1))))*(d2)+((sin(b1)*r1))));
    varDH20 = ((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3))) ;
    varDH21 = ((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3))) ;
    varDH22 = ((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3))) ;
    varDH23 = ((((sin(a1)))*(sin(b2)))*(cos(b3)*r3)+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)*r3)+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(d3)+(((sin(a1)))*(sin(b2)*r2)+((cos(a1)))*(d2)+((d1))));
  }
  // Se definen los valores básicos de la matriz DH (bi, di, ri, ai) para 4 articulaciones. Salen de multiplicar las matrices según la definición de los parámetros de Denavit-Hartenberg.
  if (numart == 4) {
    varDH00 = (((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4))) ;
    varDH01 = (((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4))) ;
    varDH02 = (((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4))) ; 
    varDH03 = (((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4)*r4)+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)*r4)+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(d4)+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3)*r3)+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)*r3)+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(d3)+(((cos(b1)))*(cos(b2)*r2)+(((-sin(b1))*cos(a1)))*(sin(b2)*r2)+(((-sin(b1))*(-sin(a1))))*(d2)+((cos(b1)*r1)))));
    varDH10 = (((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4))) ;
    varDH11 = (((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4))) ;
    varDH12 = (((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4))) ;
    varDH13 = (((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4)*r4)+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)*r4)+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(d4)+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3)*r3)+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)*r3)+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(d3)+(((sin(b1)))*(cos(b2)*r2)+((cos(b1)*cos(a1)))*(sin(b2)*r2)+((cos(b1)*(-sin(a1))))*(d2)+((sin(b1)*r1)))));
    varDH20 = (((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4))) ;
    varDH21 = (((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4))) ;
    varDH22 = (((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4))) ;
    varDH23 = (((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4)*r4)+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)*r4)+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(d4)+((((sin(a1)))*(sin(b2)))*(cos(b3)*r3)+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)*r3)+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(d3)+(((sin(a1)))*(sin(b2)*r2)+((cos(a1)))*(d2)+((d1)))));
  }
  // Se definen los valores básicos de la matriz DH (bi, di, ri, ai) para 5 articulaciones. Salen de multiplicar las matrices según la definición de los parámetros de Denavit-Hartenberg.
  if (numart == 5) {
    // Sin simplificar. Estos originales se modifican en una hoja de cálculo para reconvertirlos al formato adecuado.
    /*
    // Se usan los elementos completos de la matriz T sin haber sido sustituidos los valores, ya que algunos valores anulan términos y simplifican las ecuaciones.
    varDH00 = ((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5))) ;
    varDH01 = ((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5))) ;
    varDH02 = ((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5))) ; 
    varDH03 = ((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5)*r5)+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)*r5)+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(d5)+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4)*r4)+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)*r4)+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(d4)+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3)*r3)+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)*r3)+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(d3)+(((cos(b1)))*(cos(b2)*r2)+(((-sin(b1))*cos(a1)))*(sin(b2)*r2)+(((-sin(b1))*(-sin(a1))))*(d2)+((cos(b1)*r1))))));
    varDH10 = ((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5))) ;
    varDH11 = ((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5))) ;
    varDH12 = ((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5))) ;
    varDH13 = ((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5)*r5)+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)*r5)+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(d5)+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4)*r4)+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)*r4)+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(d4)+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3)*r3)+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)*r3)+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(d3)+(((sin(b1)))*(cos(b2)*r2)+((cos(b1)*cos(a1)))*(sin(b2)*r2)+((cos(b1)*(-sin(a1))))*(d2)+((sin(b1)*r1))))));
    varDH20 = ((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5))) ;
    varDH21 = ((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5))) ;
    varDH22 = ((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5))) ;
    varDH23 = ((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5)*r5)+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)*r5)+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(d5)+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4)*r4)+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)*r4)+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(d4)+((((sin(a1)))*(sin(b2)))*(cos(b3)*r3)+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)*r3)+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(d3)+(((sin(a1)))*(sin(b2)*r2)+((cos(a1)))*(d2)+((d1))))));
    */
    // Se usan los elementos de la matriz T de DH.
    // Simplificadas - Sin cambiar por 90º
    varDH00 = cos(b5)*(cos(b4)*(sin(b1)*sin(b3) + cos(b1)*cos(b2)*cos(b3)) + sin(b4)*(cos(b3)*sin(b1) - cos(b1)*cos(b2)*sin(b3))) + sin(b5)*(cos(b4)*(cos(b3)*sin(b1) - cos(b1)*cos(b2)*sin(b3)) - sin(b4)*(sin(b1)*sin(b3) + cos(b1)*cos(b2)*cos(b3)));
    varDH01 = cos(b5)*(cos(b4)*(cos(b3)*sin(b1) - cos(b1)*cos(b2)*sin(b3)) - sin(b4)*(sin(b1)*sin(b3) + cos(b1)*cos(b2)*cos(b3))) - sin(b5)*(cos(b4)*(sin(b1)*sin(b3) + cos(b1)*cos(b2)*cos(b3)) + sin(b4)*(cos(b3)*sin(b1) - cos(b1)*cos(b2)*sin(b3)));
    varDH02 = cos(b1)*sin(b2);
    varDH03 = d2*sin(b1) + r2*cos(b1)*cos(b2) + d3*cos(b1)*sin(b2) + r3*sin(b1)*sin(b3) + r5*cos(b5)*(cos(b4)*(sin(b1)*sin(b3) + cos(b1)*cos(b2)*cos(b3)) + sin(b4)*(cos(b3)*sin(b1) - cos(b1)*cos(b2)*sin(b3))) + r5*sin(b5)*(cos(b4)*(cos(b3)*sin(b1) - cos(b1)*cos(b2)*sin(b3)) - sin(b4)*(sin(b1)*sin(b3) + cos(b1)*cos(b2)*cos(b3))) + r4*cos(b4)*(sin(b1)*sin(b3) + cos(b1)*cos(b2)*cos(b3)) + r4*sin(b4)*(cos(b3)*sin(b1) - cos(b1)*cos(b2)*sin(b3)) + r3*cos(b1)*cos(b2)*cos(b3);
    varDH10 = - cos(b5)*(cos(b4)*(cos(b1)*sin(b3) - cos(b2)*cos(b3)*sin(b1)) + sin(b4)*(cos(b1)*cos(b3) + cos(b2)*sin(b1)*sin(b3))) - sin(b5)*(cos(b4)*(cos(b1)*cos(b3) + cos(b2)*sin(b1)*sin(b3)) - sin(b4)*(cos(b1)*sin(b3) - cos(b2)*cos(b3)*sin(b1)));
    varDH11 = sin(b5)*(cos(b4)*(cos(b1)*sin(b3) - cos(b2)*cos(b3)*sin(b1)) + sin(b4)*(cos(b1)*cos(b3) + cos(b2)*sin(b1)*sin(b3))) - cos(b5)*(cos(b4)*(cos(b1)*cos(b3) + cos(b2)*sin(b1)*sin(b3)) - sin(b4)*(cos(b1)*sin(b3) - cos(b2)*cos(b3)*sin(b1)));
    varDH12 = sin(b1)*sin(b2);
    varDH13 = r2*cos(b2)*sin(b1) - d2*cos(b1) - r3*cos(b1)*sin(b3) + d3*sin(b1)*sin(b2) - r5*cos(b5)*(cos(b4)*(cos(b1)*sin(b3) - cos(b2)*cos(b3)*sin(b1)) + sin(b4)*(cos(b1)*cos(b3) + cos(b2)*sin(b1)*sin(b3))) - r5*sin(b5)*(cos(b4)*(cos(b1)*cos(b3) + cos(b2)*sin(b1)*sin(b3)) - sin(b4)*(cos(b1)*sin(b3) - cos(b2)*cos(b3)*sin(b1))) - r4*cos(b4)*(cos(b1)*sin(b3) - cos(b2)*cos(b3)*sin(b1)) - r4*sin(b4)*(cos(b1)*cos(b3) + cos(b2)*sin(b1)*sin(b3)) + r3*cos(b2)*cos(b3)*sin(b1);
    varDH20 = cos(b5)*(cos(b3)*cos(b4)*sin(b2) - sin(b2)*sin(b3)*sin(b4)) - sin(b5)*(cos(b3)*sin(b2)*sin(b4) + cos(b4)*sin(b2)*sin(b3));
    varDH21 = - cos(b5)*(cos(b3)*sin(b2)*sin(b4) + cos(b4)*sin(b2)*sin(b3)) - sin(b5)*(cos(b3)*cos(b4)*sin(b2) - sin(b2)*sin(b3)*sin(b4));
    varDH22 = - cos(b2);
    varDH23 = d1 - d3*cos(b2) + r2*sin(b2) + r3*cos(b3)*sin(b2) + r5*cos(b5)*(cos(b3)*cos(b4)*sin(b2) - sin(b2)*sin(b3)*sin(b4)) - r5*sin(b5)*(cos(b3)*sin(b2)*sin(b4) + cos(b4)*sin(b2)*sin(b3)) + r4*cos(b3)*cos(b4)*sin(b2) - r4*sin(b2)*sin(b3)*sin(b4); // Sin simplificar
    // Esta prueba es para los elemetos simplificados. Van bien pero sólo se define este elemento.
    //varDH23 = d1 - d3*cos(b2) + r2*sin(b2) + r3*cos(b3)*sin(b2) - r5*sin(b3+b4)*sin(b2)*sin(b5) + r4*cos(b3)*cos(b4)*sin(b2) - r4*sin(b2)*sin(b3)*sin(b4) + r5*cos(b3+b4)*cos(b5)*sin(b2) ; // Simplificado

    // Se usan los elementos de la matriz T de DH.
    ///* //Haciendo el cambio de cos:-sin y sin:cos en b2 por tener 90 grados en el motor 2. 
    varDH00_2 = cos(b5)*(cos(b4)*(sin(b1)*sin(b3)- cos(b1)*sin(b2)*cos(b3)) + sin(b4)*(cos(b3)*sin(b1) + cos(b1)*sin(b2)*sin(b3))) + sin(b5)*(cos(b4)*(cos(b3)*sin(b1) + cos(b1)*sin(b2)*sin(b3)) - sin(b4)*(sin(b1)*sin(b3) - cos(b1)*sin(b2)*cos(b3)));
    varDH01_2 = cos(b5)*(cos(b4)*(cos(b3)*sin(b1) + cos(b1)*sin(b2)*sin(b3)) - sin(b4)*(sin(b1)*sin(b3) - cos(b1)*sin(b2)*cos(b3))) - sin(b5)*(cos(b4)*(sin(b1)*sin(b3) - cos(b1)*sin(b2)*cos(b3)) + sin(b4)*(cos(b3)*sin(b1) + cos(b1)*sin(b2)*sin(b3)));
    varDH02_2 = cos(b1)*cos(b2);
    varDH03_2 = d2*sin(b1) - r2*cos(b1)*sin(b2) + d3*cos(b1)*cos(b2) + r3*sin(b1)*sin(b3) + r5*cos(b5)*(cos(b4)*(sin(b1)*sin(b3) - cos(b1)*sin(b2)*cos(b3)) + sin(b4)*(cos(b3)*sin(b1) + cos(b1)*sin(b2)*sin(b3))) + r5*sin(b5)*(cos(b4)*(cos(b3)*sin(b1) + cos(b1)*sin(b2)*sin(b3)) - sin(b4)*(sin(b1)*sin(b3) - cos(b1)*sin(b2)*cos(b3))) + r4*cos(b4)*(sin(b1)*sin(b3) - cos(b1)*sin(b2)*cos(b3)) + r4*sin(b4)*(cos(b3)*sin(b1) + cos(b1)*sin(b2)*sin(b3)) - r3*cos(b1)*sin(b2)*cos(b3);
    varDH10_2 = - cos(b5)*(cos(b4)*(cos(b1)*sin(b3) + sin(b2)*cos(b3)*sin(b1)) + sin(b4)*(cos(b1)*cos(b3) - sin(b2)*sin(b1)*sin(b3))) - sin(b5)*(cos(b4)*(cos(b1)*cos(b3) - sin(b2)*sin(b1)*sin(b3)) - sin(b4)*(cos(b1)*sin(b3) + sin(b2)*cos(b3)*sin(b1)));
    varDH11_2 = sin(b5)*(cos(b4)*(cos(b1)*sin(b3) + sin(b2)*cos(b3)*sin(b1)) + sin(b4)*(cos(b1)*cos(b3) - sin(b2)*sin(b1)*sin(b3))) - cos(b5)*(cos(b4)*(cos(b1)*cos(b3) - sin(b2)*sin(b1)*sin(b3)) - sin(b4)*(cos(b1)*sin(b3) + sin(b2)*cos(b3)*sin(b1)));
    varDH12_2 = sin(b1)*cos(b2);
    varDH13_2 = - r2*sin(b2)*sin(b1) - d2*cos(b1) - r3*cos(b1)*sin(b3) + d3*sin(b1)*cos(b2) - r5*cos(b5)*(cos(b4)*(cos(b1)*sin(b3) + sin(b2)*cos(b3)*sin(b1)) + sin(b4)*(cos(b1)*cos(b3) - sin(b2)*sin(b1)*sin(b3))) - r5*sin(b5)*(cos(b4)*(cos(b1)*cos(b3) - sin(b2)*sin(b1)*sin(b3)) - sin(b4)*(cos(b1)*sin(b3) + sin(b2)*cos(b3)*sin(b1))) - r4*cos(b4)*(cos(b1)*sin(b3) + sin(b2)*cos(b3)*sin(b1)) - r4*sin(b4)*(cos(b1)*cos(b3) - sin(b2)*sin(b1)*sin(b3)) - r3*sin(b2)*cos(b3)*sin(b1);
    varDH20_2 = cos(b5)*(cos(b3)*cos(b4)*cos(b2) - cos(b2)*sin(b3)*sin(b4)) - sin(b5)*(cos(b3)*cos(b2)*sin(b4) + cos(b4)*cos(b2)*sin(b3));
    varDH21_2 = - cos(b5)*(cos(b3)*cos(b2)*sin(b4) + cos(b4)*cos(b2)*sin(b3)) - sin(b5)*(cos(b3)*cos(b4)*cos(b2) - cos(b2)*sin(b3)*sin(b4));
    varDH22_2 = sin(b2);
    varDH23_2 = d1 + d3*sin(b2) + r2*cos(b2) + r3*cos(b3)*cos(b2) + r5*cos(b5)*(cos(b3)*cos(b4)*cos(b2) - cos(b2)*sin(b3)*sin(b4)) - r5*sin(b5)*(cos(b3)*cos(b2)*sin(b4) + cos(b4)*cos(b2)*sin(b3)) + r4*cos(b3)*cos(b4)*cos(b2) - r4*cos(b2)*sin(b3)*sin(b4); // Sin simplificar
    // Esta prueba es para los elemetos simplificados. Van bien pero sólo se define este elemento.
    //varDH23_2 = d1 + d3*sin(b2) + r2*cos(b2) + r3*cos(b3)*cos(b2) - r5*sin(b3+b4)*cos(b2)*sin(b5) + r4*cos(b3)*cos(b4)*cos(b2) - r4*cos(b2)*sin(b3)*sin(b4) + r5*cos(b3+b4)*cos(b5)*cos(b2) ; // Simplificado
    //*/
  }
  // Se definen los valores básicos de la matriz DH (bi, di, ri, ai) para 6 articulaciones. Salen de multiplicar las matrices según la definición de los parámetros de Denavit-Hartenberg.
  if (numart == 6) {
    varDH00 = (((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6))) ;
    varDH01 = (((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6))) ;
    varDH02 = (((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*(-sin(a6)))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*(-sin(a6)))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(cos(a6))) ;
    varDH03 = (((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6)*r6)+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)*r6)+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(d6)+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5)*r5)+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)*r5)+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(d5)+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4)*r4)+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)*r4)+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(d4)+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3)*r3)+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)*r3)+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(d3)+(((cos(b1)))*(cos(b2)*r2)+(((-sin(b1))*cos(a1)))*(sin(b2)*r2)+(((-sin(b1))*(-sin(a1))))*(d2)+((cos(b1)*r1)))))));
    varDH10 = (((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6))) ;
    varDH11 = (((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6))) ;
    varDH12 = (((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*(-sin(a6)))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*(-sin(a6)))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(cos(a6))) ;
    varDH13 = (((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6)*r6)+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)*r6)+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(d6)+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5)*r5)+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)*r5)+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(d5)+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4)*r4)+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)*r4)+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(d4)+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3)*r3)+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)*r3)+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(d3)+(((sin(b1)))*(cos(b2)*r2)+((cos(b1)*cos(a1)))*(sin(b2)*r2)+((cos(b1)*(-sin(a1))))*(d2)+((sin(b1)*r1)))))));
    varDH20 = (((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6))) ;
    varDH21 = (((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6))) ;
    varDH22 = (((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*(-sin(a6)))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*(-sin(a6)))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(cos(a6))) ;
    varDH23 = (((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6)*r6)+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)*r6)+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(d6)+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5)*r5)+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)*r5)+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(d5)+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4)*r4)+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)*r4)+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(d4)+((((sin(a1)))*(sin(b2)))*(cos(b3)*r3)+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)*r3)+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(d3)+(((sin(a1)))*(sin(b2)*r2)+((cos(a1)))*(d2)+((d1)))))));
  }
  // Se definen los valores básicos de la matriz DH (bi, di, ri, ai) para 7 articulaciones. Salen de multiplicar las matrices según la definición de los parámetros de Denavit-Hartenberg.
  if (numart == 7) { // Al extraerlo del CSV hay que tener cuidado y seleccionar los dos trozos de las celdas de la cuarta columna con el doble click porque lo corta en dos trozos al guardarlo en la creación.
    varDH00 = ((((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)))*(cos(b7))+(((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6)))*(sin(b7))) ;   
    varDH01 = ((((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)))*((-sin(b7))*cos(a7))+(((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6)))*(cos(b7)*cos(a7))+(((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*(-sin(a6)))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*(-sin(a6)))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(cos(a6)))*(sin(a7))) ;   
    varDH02 = ((((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)))*((-sin(b7))*(-sin(a7)))+(((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6)))*(cos(b7)*(-sin(a7)))+(((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*(-sin(a6)))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*(-sin(a6)))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(cos(a6)))*(cos(a7))) ;   
    varDH03 = ((((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)))*(cos(b7)*r7)+(((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6)))*(sin(b7)*r7)+(((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*(-sin(a6)))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*(-sin(a6)))+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(cos(a6)))*(d7)+(((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6)*r6)+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)*r6)+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(d6)+((((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5)*r5)+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)*r5)+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(d5)+(((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4)*r4)+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)*r4)+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(d4)+((((cos(b1)))*(cos(b2))+(((-sin(b1))*cos(a1)))*(sin(b2)))*(cos(b3)*r3)+(((cos(b1)))*((-sin(b2))*cos(a2))+(((-sin(b1))*cos(a1)))*(cos(b2)*cos(a2))+(((-sin(b1))*(-sin(a1))))*(sin(a2)))*(sin(b3)*r3)+(((cos(b1)))*((-sin(b2))*(-sin(a2)))+(((-sin(b1))*cos(a1)))*(cos(b2)*(-sin(a2)))+(((-sin(b1))*(-sin(a1))))*(cos(a2)))*(d3)+(((cos(b1)))*(cos(b2)*r2)+(((-sin(b1))*cos(a1)))*(sin(b2)*r2)+(((-sin(b1))*(-sin(a1))))*(d2)+((cos(b1)*r1))))))));   
    varDH10 = ((((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)))*(cos(b7))+(((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6)))*(sin(b7))) ;   
    varDH11 = ((((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)))*((-sin(b7))*cos(a7))+(((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6)))*(cos(b7)*cos(a7))+(((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*(-sin(a6)))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*(-sin(a6)))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(cos(a6)))*(sin(a7))) ;   
    varDH12 = ((((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)))*((-sin(b7))*(-sin(a7)))+(((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6)))*(cos(b7)*(-sin(a7)))+(((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*(-sin(a6)))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*(-sin(a6)))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(cos(a6)))*(cos(a7))) ;   
    varDH13 = ((((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)))*(cos(b7)*r7)+(((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6)))*(sin(b7)*r7)+(((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*(-sin(a6)))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*(-sin(a6)))+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(cos(a6)))*(d7)+(((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6)*r6)+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)*r6)+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(d6)+((((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5)*r5)+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)*r5)+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(d5)+(((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)))*(cos(b4)*r4)+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(sin(a3)))*(sin(b4)*r4)+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(cos(a3)))*(d4)+((((sin(b1)))*(cos(b2))+((cos(b1)*cos(a1)))*(sin(b2)))*(cos(b3)*r3)+(((sin(b1)))*((-sin(b2))*cos(a2))+((cos(b1)*cos(a1)))*(cos(b2)*cos(a2))+((cos(b1)*(-sin(a1))))*(sin(a2)))*(sin(b3)*r3)+(((sin(b1)))*((-sin(b2))*(-sin(a2)))+((cos(b1)*cos(a1)))*(cos(b2)*(-sin(a2)))+((cos(b1)*(-sin(a1))))*(cos(a2)))*(d3)+(((sin(b1)))*(cos(b2)*r2)+((cos(b1)*cos(a1)))*(sin(b2)*r2)+((cos(b1)*(-sin(a1))))*(d2)+((sin(b1)*r1))))))));
    varDH20 = ((((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)))*(cos(b7))+(((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6)))*(sin(b7))) ;   
    varDH21 = ((((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)))*((-sin(b7))*cos(a7))+(((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6)))*(cos(b7)*cos(a7))+(((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*(-sin(a6)))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*(-sin(a6)))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(cos(a6)))*(sin(a7))) ;   
    varDH22 = ((((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)))*((-sin(b7))*(-sin(a7)))+(((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6)))*(cos(b7)*(-sin(a7)))+(((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*(-sin(a6)))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*(-sin(a6)))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(cos(a6)))*(cos(a7))) ;   
    varDH23 = ((((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)))*(cos(b7)*r7)+(((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*cos(a6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*cos(a6))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(sin(a6)))*(sin(b7)*r7)+(((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*((-sin(b6))*(-sin(a6)))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(cos(b6)*(-sin(a6)))+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(cos(a6)))*(d7)+(((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)))*(cos(b6)*r6)+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*cos(a5))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(sin(a5)))*(sin(b6)*r6)+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*((-sin(b5))*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(cos(b5)*(-sin(a5)))+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(cos(a5)))*(d6)+((((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)))*(cos(b5)*r5)+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*cos(a4))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(sin(a4)))*(sin(b5)*r5)+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*((-sin(b4))*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(cos(b4)*(-sin(a4)))+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(cos(a4)))*(d5)+(((((sin(a1)))*(sin(b2)))*(cos(b3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)))*(cos(b4)*r4)+((((sin(a1)))*(sin(b2)))*((-sin(b3))*cos(a3))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*cos(a3))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(sin(a3)))*(sin(b4)*r4)+((((sin(a1)))*(sin(b2)))*((-sin(b3))*(-sin(a3)))+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(cos(b3)*(-sin(a3)))+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(cos(a3)))*(d4)+((((sin(a1)))*(sin(b2)))*(cos(b3)*r3)+(((sin(a1)))*(cos(b2)*cos(a2))+((cos(a1)))*(sin(a2)))*(sin(b3)*r3)+(((sin(a1)))*(cos(b2)*(-sin(a2)))+((cos(a1)))*(cos(a2)))*(d3)+(((sin(a1)))*(sin(b2)*r2)+((cos(a1)))*(d2)+((d1))))))));   
  }

  if (imprimir0 == 0 or imprimir0 == 1) {
    Serial.print(F("\nSin cambio de 90º en los parámetros de DH del motor 2 (DHbi[1] = 90)"));
    Serial.print(F("\nvarDH00 = ")); Serial.print(varDH00); Serial.print(F(" // varDH01 = ")); Serial.print(varDH01);
    Serial.print(F(" // varDH02 = ")); Serial.print(varDH02); Serial.print(F(" // varDH03 = ")); Serial.println(varDH03);
    Serial.print(F("varDH10 = ")); Serial.print(varDH10); Serial.print(F(" // varDH11 = ")); Serial.print(varDH11);
    Serial.print(F(" // varDH12 = ")); Serial.print(varDH12); Serial.print(F(" // varDH13 = ")); Serial.println(varDH13);
    Serial.print(F("varDH20 = ")); Serial.print(varDH20); Serial.print(F(" // varDH21 = ")); Serial.print(varDH21);
    Serial.print(F(" // varDH22 = ")); Serial.print(varDH22); Serial.print(F(" // varDH23 = ")); Serial.println(varDH23);

    // Puntos a alcanzar en el último sistema cartesiano= a-(5, 0, 0) b-(0, 5, 0) c-(0, 0, 5) d-(5, 5, 5) 
    // Ahora se calcula la posición (x, y, z) con referencia al sistema cartesiano base, usando como dato origen un punto con referencia al último sistema de coordenadas. 
    // Resulta interesante cuando se usa con Teta2=0 ya que con un punto como puntoF=(-100,-100,100) y puntoF9_2=(0,0,5) sólo varían las componentes x,y. 
    // Para ello se ejecutarán las siguientes ecuaciones del producto matricial:
    double A_2 = puntoF9_2[0];
    double B_2 = puntoF9_2[1];
    double C_2 = puntoF9_2[2];
    Puntox0 = varDH00 * A_2 + varDH01 * B_2 + varDH02 * C_2 + varDH03 * 1; 
    Puntoy0 = varDH10 * A_2 + varDH11 * B_2 + varDH12 * C_2 + varDH13 * 1; 
    Puntoz0 = varDH20 * A_2 + varDH21 * B_2 + varDH22 * C_2 + varDH23 * 1; 
    Serial.print(F("Puntox0Extremo = ")); Serial.print(varDH03); Serial.print(F(" // Puntoy0Extremo = ")); Serial.print(varDH13);
    Serial.print(F(" // Puntoz0Extremo = ")); Serial.println(varDH23); 
    Serial.print(F("PuntoxRelativo0Extremo = ")); Serial.print(Puntox0); Serial.print(F(" // PuntoyRelativo0Extremo = ")); Serial.print(Puntoy0);
    Serial.print(F(" // PuntozRelativo0Extremo = ")); Serial.println(Puntoz0); 
    
    if (numart == 5 and imprimir0 == 1) {
      Serial.print(F("\nCon cambio de 90º en los parámetros de DH del motor 2 (DHbi[1] = 0)"));
      Serial.print(F("\nvarDH00_2 = ")); Serial.print(varDH00_2); Serial.print(F(" // varDH01_2 = ")); Serial.print(varDH01_2);
      Serial.print(F(" // varDH02_2 = ")); Serial.print(varDH02_2); Serial.print(F(" // varDH03_2 = ")); Serial.println(varDH03_2);
      Serial.print(F("varDH10_2 = ")); Serial.print(varDH10_2); Serial.print(F(" // varDH11_2 = ")); Serial.print(varDH11_2);
      Serial.print(F(" // varDH12_2 = ")); Serial.print(varDH12_2); Serial.print(F(" // varDH13_2 = ")); Serial.println(varDH13_2);
      Serial.print(F("varDH20_2 = ")); Serial.print(varDH20_2); Serial.print(F(" // varDH21_2 = ")); Serial.print(varDH21_2);
      Serial.print(F(" // varDH22_2 = ")); Serial.print(varDH22_2); Serial.print(F(" // varDH23_2 = ")); Serial.println(varDH23_2);

      // Puntos a alcanzar en el último sistema cartesiano= a-(5, 0, 0) b-(0, 5, 0) c-(0, 0, 5) d-(5, 5, 5) 
      // Ahora se calcula la posición (x, y, z) con referencia al sistema cartesiano base, usando como dato origen un punto con referencia al último sistema de coordenadas. 
      // Resulta interesante cuando se usa con Teta2=0 ya que con un punto como puntoF=(-100,-100,100) y puntoF9_2=(0,0,5) sólo varían las componentes x,y. 
      // Para ello se ejecutarán las siguientes ecuaciones del producto matricial:
      Puntox0_2 = varDH00_2 * A_2 + varDH01_2 * B_2 + varDH02_2 * C_2 + varDH03_2 * 1; 
      Puntoy0_2 = varDH10_2 * A_2 + varDH11_2 * B_2 + varDH12_2 * C_2 + varDH13_2 * 1; 
      Puntoz0_2 = varDH20_2 * A_2 + varDH21_2 * B_2 + varDH22_2 * C_2 + varDH23_2 * 1; 
      Serial.print(F("Puntox0Extremo = ")); Serial.print(varDH03_2); Serial.print(F(" // Puntoy0Extremo = ")); Serial.print(varDH13_2);
      Serial.print(F(" // Puntoz0Extremo = ")); Serial.println(varDH23_2); 
      Serial.print(F("PuntoxRelativo0Extremo = ")); Serial.print(Puntox0_2); Serial.print(F(" // PuntoyRelativo0Extremo = ")); Serial.print(Puntoy0_2);
      Serial.print(F(" // PuntozRelativo0Extremo = ")); Serial.println(Puntoz0_2); 
    }
  }
}

void dibujarCuadradoCD(){ // Calcula las posiciones teóricas de los puntos que determinan los vértices de un cuadrado respecto al Sistema de Coordenadas Base   
  Serial.println(F("*************** dibujarCuadradoCD ***************"));
  double A;
  double B;
  double C;
  // Posición central seguido de un cuadrado y otro central si se le pasa 6 puntos en un array   
  double punto2[6][3] = { {0, 0, 0}, {-100, -100, 0}, {100, -100, 0}, {100, 100, 0}, {-100, 100, 0}, {0, 0, 0} };
  int j;
  for (j = 0; j < 6 ; j = j + 1) {
    A = punto2[j][0];
    B = punto2[j][1];
    C = punto2[j][2];
    // Cálculo de las ecuaciones de DH para cinemática directa
    calDHdirectoNmotores(); 
    moverMotores();
    Serial.print(F("j = "));Serial.print(j); // j recorre los puntos que correspondan
    Serial.print(F(" - punto (X, Y, Z) = (")); Serial.print(A); Serial.print(F(", ")); ; Serial.print(B); Serial.print(F(", ")); ; Serial.print(C); Serial.println(F(")")); 
    delay(2000);
  }
}

void dibujarCircunferenciaCD(){ // Calcula y mueve el brazo sobre los puntos que determinan un círculo respecto al Sistema de Coordenadas Base mediante los dos primeros motores   
  Serial.println(F("*************** dibujarCircunferenciaCD ***************"));
  GiroCalculado[0] = GiroCalculado[0] + 1;
  // Se asignan los ángulos a ejecutar variando Theta 
  // Como el ángulo de reposo (mitad del recorrido posible) evale 90º, el Motor1 se mueve en el rango (0º,180º) con el Motor2 
  // extendido en 45º, y el Motor1 vuelve a recorrer el rango (0º-180º) con el Motor2 extendido 135º.
  int j;
  GiroCalculado[0] = GiroCalculado[0] - 90;
  GiroCalculado[1] = GiroCalculado[1] - 45;
  Serial.print(F("Ángulo del Motor 2 = ")); Serial.println(GiroCalculado[1]); 
  for (j = 0; j < 180 ; j = j + 1) {
    // Cálculo de las ecuaciones de DH para cinemática directa
    GiroCalculado[0] = GiroCalculado[0] + 1;
    calDHdirectoNmotores(); 
    moverMotores();
    Serial.print(F("Ángulo del Motor 1 = ")); Serial.println(GiroCalculado[0]); 
    delay(10);
  }
  GiroCalculado[0] = GiroCalculado[0] - 180;
  GiroCalculado[1] = GiroCalculado[1] + 90;
  Serial.print(F("Ángulo del Motor 2 = ")); Serial.println(GiroCalculado[1]); 
  for (j = 0; j < 180 ; j = j + 1) {
    // Cálculo de las ecuaciones de DH para cinemática directa
    GiroCalculado[0] = GiroCalculado[0] + 1;
    calDHdirectoNmotores(); 
    moverMotores();
    Serial.print(F("Ángulo del Motor 1 = ")); Serial.println(GiroCalculado[0]); 
    delay(100);
  }
  GiroCalculado[0] = GiroCalculado[0] - 90;
  GiroCalculado[1] = GiroCalculado[1] - 45;
  calDHdirectoNmotores(); 
  moverMotores();
}

void pruebaDeMovimientosCD(){ // Prueba todos los motores   
  Serial.println(F("*************** pruebaDeMovimientosCD ***************"));
  GiroCalculado[0] = GiroCalculado[0] - 45;
  GiroCalculado[1] = GiroCalculado[1] - 45;
  GiroCalculado[2] = GiroCalculado[2] - 45;
  GiroCalculado[3] = GiroCalculado[3] - 45;
  GiroCalculado[4] = GiroCalculado[4] - 45;
  calDHdirectoNmotores(); 
  moverMotores();
  delay(1000);
  GiroCalculado[0] = GiroCalculado[0] + 45;
  GiroCalculado[1] = GiroCalculado[1] + 45;
  GiroCalculado[2] = GiroCalculado[2] + 45;
  GiroCalculado[3] = GiroCalculado[3] + 45;
  GiroCalculado[4] = GiroCalculado[4] + 45;
  calDHdirectoNmotores(); 
  moverMotores();
  delay(1000);
  GiroCalculado[0] = GiroCalculado[0] + 45;
  GiroCalculado[1] = GiroCalculado[1] + 45;
  GiroCalculado[2] = GiroCalculado[2] + 45;
  GiroCalculado[3] = GiroCalculado[3] + 45; // Por montaje, el motor hace que suba el brazo con el mismo giro que DHbi2[2], cuando DHbi2[2] hace que baje el brazo. Pero son iguales.
  GiroCalculado[4] = GiroCalculado[4] + 45;
  calDHdirectoNmotores(); 
  moverMotores();
}

//************************************************************************************************
// Ejemplo 3-1 - Funciones de prueba de los motores en Cinemática Inversa
// Cálculos varios para la ejecución de los diferentes algoritmos a utilizar

double calDHinversoNmotores_3_1(double A, double B, double C) { // Pasa ángulos en radianes a grados – Datos: Radianes // Para Ejemplo 3-1
  // HABRÍA QUE REVISAR LAS ECUACIONES
  // SÓLO SE TRABAJA SOBRE LOS MOTORES 1,3 Y 4 (0,2,3)
  Serial.println(F("*************** calDHinversoNmotores_3_1 ***************"));
  GiroModificado[0] = 90; // se corrige el giro del primer moto por tener 90º de diferencia respecto al plano de los otros dos motores.
  if (A == 0){ // En caso de tener valores igual a 0 que den problemas al dividir. Necesario en atan pero no en atan2.
    A = 0.0001;
  } else if (C == 0){ // En caso de tener valores igual a 0 que den problemas al dividir. Necesario en atan pero no en atan2.
    C = 0.0001;
  }
  double var01 = A*A; // Px*Px
  double var02 = B*B; // Py*Py
  double var03 = abs(sqrt(var01+var02));
  //double resulTeta1 = radianesAGrados(atan2(B,A)); // El resultado es +-sqrt(...
  double resulTeta1 = radianesAGrados(atan(B/A)); // El resultado es +-sqrt(...
  double var11 = C-L1; //Pz-L1 // abs(C-L1)
  double var12 = var11*var11;
  double var13 = L2*L2;
  double var14 = L3*L3;
  double var15 = var01+var02+var12-var13-var14;
  double var16 = 2*L2*L3;
  double var17 = var15/var16;
  double resulTeta3radianes = acos(var17); 
  double resulTeta3grados = radianesAGrados(resulTeta3radianes); 
  double L3sinresulTeta3 = abs(L3*sin(resulTeta3radianes)); 
//  double resulTeta2 = radianesAGrados(atan(var11/var03))-radianesAGrados(atan( L3*sin(resulTeta3)/(L2+L3*cos(resulTeta3)) )); // Hay que considerar denominadores distinto de 0.
//  double var21 = abs( radianesAGrados(atan2(var11 , var03)) );
//  double var22 = abs( radianesAGrados( atan2(L3*sin(resulTeta3) , (L2+L3*cos(resulTeta3))) ) );
  double var21 = abs( radianesAGrados(atan(var11/var03)) );
  double var22 = abs( radianesAGrados( atan(L3*sin(resulTeta3radianes) / (L2+L3*cos(resulTeta3radianes))) ) );
  double resulTeta2 = 0;

if (B < 0) { 
    if (var11 >= 0 and var03 < L3sinresulTeta3) { // Caso 4 // Codo arriba 
      if (A < 0) { 
        resulTeta1 = resulTeta1 - 180;
      }
      resulTeta2 = (90-var21-var22); // Ángulo negativo (izquierda de la vertical) = Hacia Y positivo y Z>=L1.  
      Serial.print(F("\nCaso 4 ")); 
      if (imprimir0 == 1) {
        Serial.print(F(" - abs(B)= "));Serial.print(abs(B)); Serial.print(F(" - L3sinresulTeta3= "));Serial.println(L3sinresulTeta3);
      }
      
    } else if (var11 >= 0 and var03 >= L3sinresulTeta3) { // Caso 5 // Codo arriba 
      if (A < 0) { 
        resulTeta1 = resulTeta1 - 180;
      }
      resulTeta2 = (90-var21-var22); // Ángulo positivo (derecha de la vertical) = Hacia Y negativo y Z>=L1. 
      Serial.print(F("\nCaso 5 "));       
      if (imprimir0 == 1) {
        Serial.print(F(" - var11= "));Serial.print(var11); Serial.print(F(" - L3sinresulTeta3= "));Serial.println(L3sinresulTeta3);
      }   
      
    } else if (var11 < 0){ // Caso 6, Caso 7 // Codo arriba   
      if (A < 0) { 
        resulTeta1 = resulTeta1 - 180;
      }
      resulTeta2 = (90+var21-var22); // Ángulo positivo (derecha de la vertical) = Hacia Y negativo y Z<L1.
      Serial.print(F("\nCaso 6,7 ")); 
      if (imprimir0 == 1) {
        Serial.print(F(" - abs(B)= "));Serial.println(abs(B));
      }
    } 
  } else if (B >= 0) {
    if (var11 < 0) { // Caso 1,8 // Codo abajo - 180º de diferencia en θ1 
      if (A >= 0) { 
        resulTeta1 = resulTeta1-180; // Se gira porque θ1 pasa a girar en dirección contraria
        resulTeta2 = (-90-var21+var22); // Ángulo negativo (izquierda de la vertical) = Hacia Y positivo y Z<L1. 
        resulTeta3grados = -resulTeta3grados; // Se le da la vuelta porque θ3 pasa a girar en dirección contraria
      } else {
        //resulTeta1 = resulTeta1-180; // Se gira porque θ1 pasa a girar en dirección contraria
        resulTeta2 = (-90-var21+var22); // Ángulo negativo (izquierda de la vertical) = Hacia Y positivo y Z<L1. 
        resulTeta3grados = -resulTeta3grados; // Se le da la vuelta porque θ3 pasa a girar en dirección contraria        
      }
      Serial.print(F("\nCaso 1,8 ")); 
      if (imprimir0 == 1) {
         Serial.print(F(" - var11= "));Serial.print(var11); Serial.print(F(" - L3sinresulTeta3= "));Serial.println(L3sinresulTeta3);
      }

    } else if (var11 >= 0 and abs(var11) < L3sinresulTeta3) { // Caso 2 // Codo abajo - 180º de diferencia en θ1
      if (A >= 0) { 
        resulTeta1 = resulTeta1-180; // Se le da la vuelta porque θ1 pasa a girar en dirección contraria
      } 
      resulTeta2 = -90+var21+var22; // Ángulo negativo (izquierda de la vertical) = Hacia Y positivo y Z<L1. 
      resulTeta3grados = -resulTeta3grados; // Se le da la vuelta porque θ3 pasa a girar en dirección contraria        
      Serial.print(F("\nCaso 2 ")); 
      if (imprimir0 == 1) {
         Serial.print(F(" - var11= "));Serial.print(var11); Serial.print(F(" - L3sinresulTeta3= "));Serial.println(L3sinresulTeta3);
      }
    
    } else if (var11 >= 0 and A >= 0 and abs(var11) >= L3sinresulTeta3) { // Caso 4-2 // Codo arriba 
      resulTeta1 = resulTeta1-180; // Se gira porque θ1 pasa a girar en con los ángulos en dirección contraria
      resulTeta2 = -(90-var21-var22); // Ángulo negativo (izquierda de la vertical) = Hacia X positivo y Z>=L1.  
      resulTeta3grados = -resulTeta3grados; // Se le da la vuelta porque θ3 pasa a girar en dirección contraria 
      Serial.print(F("\nCaso 4-2 ")); 
      if (imprimir0 == 1) {
         Serial.print(F(" - var11= "));Serial.print(var11); Serial.print(F(" - L3sinresulTeta3= "));Serial.println(L3sinresulTeta3);
      }
    
    } else if (var11 >= 0 and A < 0 and abs(var11) >= L3sinresulTeta3) { // Caso 3 // Codo arriba 
      resulTeta2 = (-90+var21-var22); // Ángulo negativo (izquierda de la vertical) = Hacia Y positivo y Z>=L1.  
      Serial.print(F("\nCaso 3 ")); 
      if (imprimir0 == 1) {
         Serial.print(F(" - var11= "));Serial.print(var11); Serial.print(F(" - L3sinresulTeta3= "));Serial.println(L3sinresulTeta3);
      }
    } 
  } // fin de if (B)

  GiroCalculado[0] = resulTeta1; // Se meten los valores en un array para extraerlos cuando giren los motores hasta que no haya más giros calculados. Se podnrán tantas líneas como motores definidos con movimiento.
  GiroCalculado[2] = resulTeta2;
  GiroCalculado[3] = resulTeta3grados;
  if (imprimir0 == 1) {
    Serial.print(F("punto[]= ( "));Serial.print(A); Serial.print(F(" , "));Serial.print(B); Serial.print(F(" , "));Serial.print(C); Serial.println(F(" )"));
    Serial.print(F("L1: "));Serial.print(L1);    Serial.print(F(" - L2: "));Serial.print(L2);    Serial.print(F(" - L3: "));Serial.println(L3);
    Serial.print(F("var01= "));Serial.print(var01); Serial.print(F(" - var02: "));Serial.print(var02); 
    Serial.print(F(" - var03: "));Serial.print(var03); 
    Serial.print(F(" - var11 (C-L1): "));Serial.print(var11); Serial.print(F(" - var12 (var11*var11): "));Serial.print(var12);
    Serial.print(F(" - var13 (L2*L2): "));Serial.print(var13); Serial.print(F(" - var14 (L3*L3): "));Serial.print(var14);
    Serial.print(F("\n - var15 (var01+var02+var12-var13-var14): "));Serial.print(var15); Serial.print(F(" - var16 (2*L2*L3): "));Serial.print(var16);
    Serial.print(F(" - var17 (var15/var16): "));Serial.print(var17); 
    Serial.print(F(" - var21 (γ): "));Serial.print(var21); Serial.print(F(" - var22 (φ): "));Serial.println(var22);
    Serial.print(F("resulTeta1= "));Serial.print(resulTeta1);
    Serial.print(F(" - resulTeta2: "));Serial.print(resulTeta2);
    Serial.print(F(" - resulTeta3grados: "));Serial.println(resulTeta3grados);
  } // Termina el if (imprimir0 == 1)

// Comprobación de datos calculado el punto a partir de las variables resulTeta1, resulTeta2, resulTeta1, La, L2 y L3
// Calcula el punto resultante para ver si coincide con el definido (No lo hará por los parámetros de di  yri no tenidos en cuenta) y mueve los motores.
// calDHdirectoNmotores(); // Ya no hace falta al ejecutar la comprobación del punto, tras el cálculo de los ángulos en la función setup().
return 0;
}

void dibujarCuadradoCI(){ // Calcula las posiciones teóricas de los puntos que determinan los vértices de un cuadrado respecto al Sistema de Coordenadas Base   
  Serial.println(F("*************** dibujarCuadradoCI ***************"));
  double A;
  double B;
  double C;
  // Posición central seguido de un cuadrado y otro central si se le pasa 6 puntos en un array   
  double punto2[14][3] = {{0, 0, 631}, {-200, -200, 500}, {200, -200, 500}, {200, 200, 500}, {-200, 200, 500}, {-200, -200, 300}, {200, -200, 300}, {200, 200, 300},  {-200, 200, 300}, {-200, -200, 100}, {200, -200, 100}, {200, 200, 100}, {-200, 200, 100}, {0, 0, 631}};
  int j;
  for (j = 0; j < 14 ; j = j + 1) {
    A = punto2[j][0];
    B = punto2[j][1];
    C = punto2[j][2];
    // Cálculo de las ecuaciones de DH para cinemática directa
    calDHinversoNmotores_3_1(A, B, C); 
    delay(1000);
    calDHdirectoNmotores();
    delay(1000);
    moverMotores();
    Serial.print(F("j = "));Serial.print(j); // j recorre los puntos que correspondan
    Serial.print(F(" - punto (X, Y, Z) = (")); Serial.print(A); Serial.print(F(", ")); ; Serial.print(B); Serial.print(F(", ")); ; Serial.print(C); Serial.println(F(")")); 
  }
}

void dibujarCircunferenciaCI(){ // Calcula y mueve el brazo sobre los puntos que determinan un círculo respecto al Sistema de Coordenadas Base mediante los dos primeros motores   
  Serial.println(F("*************** dibujarCircunferenciaCI ***************"));
  // Círculo (x2 + Y2 = r2) cambiado los puntos y no lo ángulos de los diferentes motores
  //double puntoF[] = {0, 0, 631};  
  int j;
  double A = -200;
  double B = abs(sqrt(211.0*211.0-A*A));
  double C = 400;
  calDHinversoNmotores_3_1(A, B, C); 
  calDHdirectoNmotores(); 
  moverMotores();
  delay(1000);
  Serial.println(F("Y positivos .... "));  
  for (j = -210; j < 210 ; j = j + 5) {
    // Cálculo de las ecuaciones de DH para cinemática directa
    A = j;
    B = abs(sqrt(211.0*211.0-A*A));
    calDHinversoNmotores_3_1(A, B, C); 
    calDHdirectoNmotores(); 
    moverMotores();
    Serial.print(F("X = ")); Serial.print(A); Serial.print(F("  - Y = ")); Serial.println(B); 
    delay(50);
  }
  A = 200;
  B = abs(sqrt(211.0*211.0-A*A));
  calDHinversoNmotores_3_1(A, B, C); 
  calDHdirectoNmotores(); 
  moverMotores();
  delay(1000);
  Serial.println(F("Y negativos .... "));  
  for (j = 210; j > -210 ; j = j - 5) {
    // Cálculo de las ecuaciones de DH para cinemática directa
    A = j;
    B = -abs(sqrt(211.0*211.0-A*A));
    calDHinversoNmotores_3_1(A, B, C); 
    calDHdirectoNmotores(); 
    moverMotores();
    Serial.print(F("X = ")); Serial.print(A); Serial.print(F("  - Y = ")); Serial.println(B); 
    delay(50);
  }
}

//************************************************************************************************
// Ejemplo 4-0 - Funciones de prueba de los motores en Cinemática Inversa
// Cálculos varios para la ejecución de los diferentes algoritmos a utilizar

// SIN HACER
double calDHinversoNmotores_4_0(double A, double B, double C) { // Pasa ángulos en radianes a grados – Datos: Radianes // Para Ejemplo 4-0
  // HAY QUE METER SUS ECUACIONES PORQUE AHORA ES IGUAL QUE EL EJEMPLO 3-1
  Serial.println(F("*************** calDHinversoNmotores_4_0 ***************"));
  GiroModificado[0] = 90; // Se corrige el giro del primer moto por tener 90º de diferencia respecto al plano de los otros dos motores.
  if (A == 0){ // En caso de tener valores igual a 0 que den problemas al dividir. Necesario en atan pero no en atan2.
    A = 0.01;
  } else if (C == 0){ // En caso de tener valores igual a 0 que den problemas al dividir. Necesario en atan pero no en atan2.
    C = 0.01;
  }
  double var01 = A*A; // Px*Px
  double var02 = B*B; // Py*Py
  double var03 = abs(sqrt(var01+var02));
  //double resulTeta1 = radianesAGrados(atan2(B,A)); // El resultado es +-sqrt(...
  double resulTeta1 = radianesAGrados(atan(B/A)); // El resultado es +-sqrt(...
  double var11 = C-L1; //Pz-L1 // abs(C-L1)
  double var12 = var11*var11;
  double var13 = L2*L2;
  double var14 = L3*L3;
  double var15 = var01+var02+var12-var13-var14;
  double var16 = 2*L2*L3;
  double var17 = var15/var16;
  double resulTeta3radianes = acos(var17); 
  double resulTeta3grados = radianesAGrados(resulTeta3radianes); 
  double L3sinresulTeta3 = abs(L3*sin(resulTeta3radianes)); 
//  double resulTeta2 = radianesAGrados(atan(var11/var03))-radianesAGrados(atan( L3*sin(resulTeta3)/(L2+L3*cos(resulTeta3)) )); // Hay que considerar denominadores distinto de 0.
//  double var21 = abs( radianesAGrados(atan2(var11 , var03)) );
//  double var22 = abs( radianesAGrados( atan2(L3*sin(resulTeta3) , (L2+L3*cos(resulTeta3))) ) );
  double var21 = abs( radianesAGrados(atan(var11/var03)) );
  double var22 = abs( radianesAGrados( atan(L3*sin(resulTeta3radianes) / (L2+L3*cos(resulTeta3radianes))) ) );
  double resulTeta2 = 0;

if (B < 0) { 
    if (var11 >= 0 and var03 < L3sinresulTeta3) { // Caso 4 // Codo arriba 
      if (A < 0) { 
        resulTeta1 = resulTeta1 - 180;
      }
      resulTeta2 = (90-var21-var22); // Ángulo negativo (izquierda de la vertical) = Hacia Y positivo y Z>=L1.  
      Serial.print(F("\nCaso 4 ")); Serial.print(F(" - abs(B)= "));Serial.print(abs(B)); Serial.print(F(" - L3sinresulTeta3= "));Serial.println(L3sinresulTeta3);
    
    } else if (var11 >= 0 and var03 >= L3sinresulTeta3) { // Caso 5 // Codo arriba 
      if (A < 0) { 
        resulTeta1 = resulTeta1 - 180;
      }
      resulTeta2 = (90-var21-var22); // Ángulo positivo (derecha de la vertical) = Hacia Y negativo y Z>=L1. 
      Serial.print(F("\nCaso 5 ")); Serial.print(F(" - var11= "));Serial.print(var11); Serial.print(F(" - L3sinresulTeta3= "));Serial.println(L3sinresulTeta3);
   
    } else if (var11 < 0){ // Caso 6, Caso 7 // Codo arriba   
      if (A < 0) { 
        resulTeta1 = resulTeta1 - 180;
      }
      resulTeta2 = (90+var21-var22); // Ángulo positivo (derecha de la vertical) = Hacia Y negativo y Z<L1.
      Serial.print(F("\nCaso 6,7 ")); Serial.print(F(" - abs(B)= "));Serial.println(abs(B));  
    } 
  } else if (B >= 0) {
    if (var11 < 0) { // Caso 1,8 // Codo abajo - 180º de diferencia en θ1 
      if (A >= 0) { 
        resulTeta1 = resulTeta1-180; // Se gira porque θ1 pasa a girar en dirección contraria
        resulTeta2 = (-90-var21+var22); // Ángulo negativo (izquierda de la vertical) = Hacia Y positivo y Z<L1. 
        resulTeta3grados = -resulTeta3grados; // Se le da la vuelta porque θ3 pasa a girar en dirección contraria
      } else {
        //resulTeta1 = resulTeta1-180; // Se gira porque θ1 pasa a girar en dirección contraria
        resulTeta2 = (-90-var21+var22); // Ángulo negativo (izquierda de la vertical) = Hacia Y positivo y Z<L1. 
        resulTeta3grados = -resulTeta3grados; // Se le da la vuelta porque θ3 pasa a girar en dirección contraria        
      }
      Serial.print(F("\nCaso 1,8 ")); Serial.print(F(" - var11= "));Serial.print(var11); Serial.print(F(" - L3sinresulTeta3= "));Serial.println(L3sinresulTeta3);

    } else if (var11 >= 0 and abs(var11) < L3sinresulTeta3) { // Caso 2 // Codo abajo - 180º de diferencia en θ1
      if (A >= 0) { 
        resulTeta1 = resulTeta1-180; // Se le da la vuelta porque θ1 pasa a girar en dirección contraria
      } 
      resulTeta2 = -90+var21+var22; // Ángulo negativo (izquierda de la vertical) = Hacia Y positivo y Z<L1. 
      resulTeta3grados = -resulTeta3grados; // Se le da la vuelta porque θ3 pasa a girar en dirección contraria        
      Serial.print(F("\nCaso 2 ")); Serial.print(F(" - var11= "));Serial.print(var11); Serial.print(F(" - L3sinresulTeta3= "));Serial.println(L3sinresulTeta3);
    
    } else if (var11 >= 0 and A >= 0 and abs(var11) >= L3sinresulTeta3) { // Caso 4-2 // Codo arriba 
      resulTeta1 = resulTeta1-180; // Se gira porque θ1 pasa a girar en con los ángulos en dirección contraria
      resulTeta2 = -(90-var21-var22); // Ángulo negativo (izquierda de la vertical) = Hacia X positivo y Z>=L1.  
      resulTeta3grados = -resulTeta3grados; // Se le da la vuelta porque θ3 pasa a girar en dirección contraria 
      Serial.print(F("\nCaso 4-2 ")); Serial.print(F(" - var11= "));Serial.print(var11); Serial.print(F(" - L3sinresulTeta3= "));Serial.println(L3sinresulTeta3);
    
    } else if (var11 >= 0 and A < 0 and abs(var11) >= L3sinresulTeta3) { // Caso 3 // Codo arriba 
      resulTeta2 = (-90+var21-var22); // Ángulo negativo (izquierda de la vertical) = Hacia Y positivo y Z>=L1.  
      Serial.print(F("\nCaso 3 ")); Serial.print(F(" - var11= "));Serial.print(var11); Serial.print(F(" - L3sinresulTeta3= "));Serial.println(L3sinresulTeta3);
    } 
  } // fin de if (B)

  GiroCalculado[0] = resulTeta1; // Se meten los valores en un array para extraerlos cuando giren los motores hasta que no haya más giros calculados. Se podnrán tantas líneas como motores definidos con movimiento.
  GiroCalculado[2] = resulTeta2;
  GiroCalculado[3] = resulTeta3grados;
  if (imprimir0 == 1) {
    Serial.print(F("puntoF[]= ( "));Serial.print(A); Serial.print(F(" , "));Serial.print(B); Serial.print(F(" , "));Serial.print(C); Serial.println(F(" )"));
    Serial.print(F("L1: "));Serial.print(L1);    Serial.print(F(" - L2: "));Serial.print(L2);    Serial.print(F(" - L3: "));Serial.println(L3);
    Serial.print(F("var01= "));Serial.print(var01); Serial.print(F(" - var02: "));Serial.print(var02); 
    Serial.print(F(" - var03: "));Serial.print(var03); 
    Serial.print(F(" - var11 (C-L1): "));Serial.print(var11); Serial.print(F(" - var12 (var11*var11): "));Serial.print(var12);
    Serial.print(F(" - var13 (L2*L2): "));Serial.print(var13); Serial.print(F(" - var14 (L3*L3): "));Serial.print(var14);
    Serial.print(F("\n - var15 (var01+var02+var12-var13-var14): "));Serial.print(var15); Serial.print(F(" - var16 (2*L2*L3): "));Serial.print(var16);
    Serial.print(F(" - var17 (var15/var16): "));Serial.print(var17); 
    Serial.print(F(" - var21 (γ): "));Serial.print(var21); Serial.print(F(" - var22 (φ): "));Serial.println(var22);
    Serial.print(F("resulTeta1= "));Serial.print(resulTeta1);
    Serial.print(F(" - resulTeta2: "));Serial.print(resulTeta2);
    Serial.print(F(" - resulTeta3grados: "));Serial.println(resulTeta3grados);
  } // Termina el if (imprimir0 == 1)

// Comprobación de datos calculado el punto a partir de las variables resulTeta1, resulTeta2, resulTeta1, La, L2 y L3
// Calcula el punto resultante para ver si coincide con el definido (No lo hará por los parámetros de di  yri no tenidos en cuenta) y mueve los motores.
// calDHdirectoNmotores(); // Ya no hace falta al ejecutar la comprobación del punto, tras el cálculo de los ángulos en la función setup().
return 0;
}

//************************************************************************************************
// Ejemplo 1-0 - Funciones de prueba de los motores en Cinemática Inversa
// Cálculos varios para la ejecución de los diferentes algoritmos a utilizar

double calDHinversoNmotores_1_0(double A, double B, double C) { // Pasa ángulos en radianes a grados – Datos: Radianes // Para Ejemplo 1-0
  Serial.print(F("*************** calDHinversoNmotores_1_0 ***************"));
  if (A == 0){ // En caso de tener valores igual a 0 que den problemas al dividir. Necesario en atan pero no en atan2.
    A = -0.0001;
  }
  if (B == 0){ // En caso de tener valores igual a 0 que den problemas al dividir. Necesario en atan pero no en atan2.
    B = -0.0001;
  }
  if (C == 0){ // En caso de tener valores igual a 0 que den problemas al dividir. Necesario en atan pero no en atan2.
    C = -0.0001;
  }
// Primer Grupo (motores 1-2) y Plano Oblicuo (como caso particular sería en un plano vertical, con resulTeta2=0)
// Teta 2 (Define el Plano de Ataque. Si no se dice nada: Teta2=0).  //PI/4; // 0; Se definen al principio del código.
  double resulTeta2radianes = anguloPlanoDeAtaque; // Ángulo del plano de ataque por elección // Por defecto el brazo estar en vertical (Teta2=0). // Comienza a girar en Y positivo. //Se define al prioncipio del código.
  double resulTeta2grados = radianesAGrados(resulTeta2radianes); 

 // ORI de Teta1 /*
// Teta 1 (Siempre se calcula sobre un modelo oblicuo ya que, la vertical sería un caso particular del oblicuo) 
// Se considera el plano de ataque, pero se calculan los ángulos como si fuera vertical. Falla en Teta2 distinta de 0.
// Se utiliza para presentar un fallo en "Option = 12"
  double var01 = A*A; // Px*Px
  double var02 = B*B; // Py*Py
  double resulTeta1_1radianes_1 = atan2(B,A); // Teta1_1 //double resulTeta1_1radianes = atan(abs(B/A)); // Teta1_1  // Respecto a X // Tetap = Alfap en el caso de B<0
  double resulTeta1_1grados_1 = radianesAGrados(resulTeta1_1radianes_1); // Teta1_1 
  double var030 = L3*cos(resulTeta2radianes)-L2p*sin(resulTeta2radianes); // Componente XY de L3 y L2p cuando giran Teta2 en la vista superior // Esté donde esté sólo depende de Teta2. 
  //double var031 = abs(sqrt((var01+var02)-(var030*var030)) - L2); // L
  double Teta1ORIControlRaiz = (var01+var02) -(var030*var030) - L2;
  double var031;
  double resulTetaradianes = 0; // Teta // Alfa en el caso de B<0
  if (Teta1ORIControlRaiz >= 0) {
    var031 = abs(sqrt(Teta1ORIControlRaiz));
    resulTetaradianes = atan(var030/(var031+L2)); 
  } else {
    var031 = abs(sqrt(-Teta1ORIControlRaiz)); //Falla al calcular el punto *****************************************************************************
    Teta1ORIInverso = 1;
    //var031 = abs(sqrt(L2-((var01+var02) -(var030*var030)))); // Esta expresión sería cierta salvo que sqrt(A*A+B*B)<L3 porque no se podría calcular nunca. En ese caso se podría escoger Teta1== y calcular el resto. 
    Serial.print(F("\n****** RAÍZ NEGATIVA EN var031 ********** FALLA AL CALCULAR EL PUNTO ********** ")); 
    Serial.print(F(" - var031 (L)= "));Serial.print(var031);
  }
  double resulTeta1radianes_1 = 0;
  if (B >= 0){
    // Mediante una solución geométrica simple.
    Serial.print(F("\n************* Teta1 - Zona Y+ ")); // -PI/2 para llevar el brazo a la derecha e invertir la parte superior con Teta3,4 y 5. Hay que revisar Teta2.
    resulTeta1radianes_1 =  -PI/2 + ((abs(resulTeta1_1radianes_1) + abs(resulTetaradianes))); // -PI/2 para empezar en Y- como 0
  } else if (B < 0){   // Mediante una solución geométrica simple.
    Serial.print(F("\n************ Teta1 - Zona Y- ")); 
    resulTeta1radianes_1 = PI/2 - abs(resulTeta1_1radianes_1) - abs(resulTetaradianes); // +PI/2 para empezar en Y- como 0
  }
  double resulTetagrados_1 = radianesAGrados(resulTetaradianes); // Teta 
  double resulTeta1grados_1 = radianesAGrados(resulTeta1radianes_1); // Teta1 
  if (imprimir0 == 1) {
    Serial.print(F("\n - var01= "));Serial.print(var01);Serial.print(F(" - var02= "));Serial.print(var02);
    Serial.print(F("\n - var030= "));Serial.print(var030);Serial.print(F(" - var031= "));Serial.print(var031);
    Serial.print(F("\n - resulTeta1_1grados_1= "));Serial.print(resulTeta1_1grados_1);Serial.print(F(" - resulTetagrados_1= "));Serial.print(resulTetagrados_1);
    Serial.print(F("\n - resulTeta1grados_1= "));Serial.print(resulTeta1grados_1);
  }
 // Fin de ORI de Teta1 */

// /*  
// Teta 1 (Alternativa - Siempre se calcula sobre un modelo oblicuo ya que, la vertical sería un caso particular del oblicuo) 
// Se consideran las medidas reales del plano de ataque, a través del Producto de Vectores Directores (V1*V2=0 por ser perpendiculares).
  double var301 = A*A; // Px*Px
  double var302 = B*B; // Py*Py
  double resulTeta1_1radianes_2 = atan2(B,A); // Teta1_1 //double resulTeta1_1radianes = atan(abs(B/A));  
  double resulTeta1_1grados_2 = radianesAGrados(resulTeta1_1radianes_2); // Teta1_1 
  double var330 = (-C*sin(resulTeta2radianes)+L1*sin(resulTeta2radianes)+L3)/cos(resulTeta2radianes); // ***** CÓDIGO DE PRODUCTO DE VECTORES DIRECTORES *****
  //double var331 = abs(sqrt((var301+var302)-(var330*var330))); 
  double var331;
  double Teta1ALTControlRaiz = (var301+var302)-(var330*var330);
  if (Teta1ALTControlRaiz >= 0) {
    var331 = abs(sqrt(Teta1ALTControlRaiz));
  } else {
    var331 = abs(sqrt(Teta1ALTControlRaiz));
    //var331 = abs(sqrt(-Teta1ALTControlRaiz)); //Falla al calcular el punto *****************************************************************************
    Teta1ALTInverso = 1;
    Serial.print(F("\n****** RAÍZ NEGATIVA EN var331 ********** FALLA AL CALCULAR EL PUNTO ********** ")); 
    Serial.print(F(" - Teta1ALTControlRaiz= "));Serial.print(Teta1ALTControlRaiz); 
  }
  double resulTeta1_2radianes_2  = atan2(var331,var330); // 
  double resulTeta1_2grados_2 = radianesAGrados(resulTeta1_2radianes_2); // Teta1_2 
  double resulTeta1radianes_2;
  //double 2Py = L3*(sin(resulTeta1radianes_2)*cos(resulTeta2radianes)+L2*sin(resulTeta2radianes)*sin(resulTeta1radianes_2)-L2*cos(resulTeta1radianes_2));
  if (B >= 0) { // B >= 0 // B >= 2Py
    // Mediante una solución geométrica simple.
    Serial.print(F("\nAlternativa - Teta1 - Zona Y+ ")); 
    resulTeta1radianes_2 =  resulTeta1_1radianes_2 - resulTeta1_2radianes_2; 
  } else { 
    Serial.print(F("\n************ Alternativa - Teta1 - Zona Y- ")); 
    resulTeta1radianes_2 = resulTeta1_1radianes_2 + resulTeta1_2radianes_2; 
  }
  double resulTeta1grados_2 = radianesAGrados(resulTeta1radianes_2); // Teta1 
  if (imprimir0 == 1) {
    Serial.print(F("\n - var301= "));Serial.print(var301);Serial.print(F(" - var302= "));Serial.print(var302);
    Serial.print(F("\n - var330= "));Serial.print(var330);Serial.print(F(" - var331= "));Serial.print(var331);
    Serial.print(F("\n - resulTeta1_1grados_2= "));Serial.print(resulTeta1_1grados_2);Serial.print(F(" - resulTeta1_2grados_2= "));Serial.print(resulTeta1_2grados_2);
    Serial.print(F("\n - resulTeta1grados_2= "));Serial.println(resulTeta1grados_2);
  }
// */

  double resulTeta1radianes = resulTeta1radianes_2; // **** //  Esta segunda va bien en todos los Teta2. // Fallaría con ORI de Teta3......
  double resulTeta1grados = resulTeta1grados_2; // ****
  if (Option2 == 12) { // Para mostrar el fallo en caso de no considerar Teta1 en función del ángulo del plano de ataque.
    resulTeta1radianes = resulTeta1radianes_1; // Sólo va bien en Teta2=0. Para el resto falla X e Y, pero va bien Z. // Sirve de ejemplo de fallo.
    resulTeta1grados = resulTeta1grados_1;
  }
  
// OP1 - DH
    double var11 = L2*sin(resulTeta1radianes)-L2p*cos(resulTeta1radianes)*sin(resulTeta2radianes); // OP1x - OP1(var11,var12,var13) 
    double var12 = -L2p*sin(resulTeta1radianes)*sin(resulTeta2radianes)-L2*cos(resulTeta1radianes); // OP1y - OP1(var11,var12,var13)
    double var13 = L1+L2p*cos(resulTeta2radianes); // OP1z - OP1(var11,var12,var13)
// OP2 - DH
    double var14 = L3*cos(resulTeta1radianes)*cos(resulTeta2radianes)+L2*sin(resulTeta1radianes)-L2p*cos(resulTeta1radianes)*sin(resulTeta2radianes); // OP2x - OP2(var14,var15,var16)
    double var15 = L3*sin(resulTeta1radianes)*cos(resulTeta2radianes)-L2p*sin(resulTeta1radianes)*sin(resulTeta2radianes)-L2*cos(resulTeta1radianes); // OP2y - OP2(var14,var15,var16)
    double var16 = L1+L2p*cos(resulTeta2radianes)+L3*sin(resulTeta2radianes); // OP2z - OP2(var14,var15,var16)
    double var205_A = A - var14; // 2Px - 2P(var205_A,var206_B,var207_C) // P respecto a P2 // Signo - por ser hacia el lado - del eje. Se cambiará cuando esté en otro cuadrante.
    double var206_B = B - var15; // 2Py - 2P(var205_A,var206_B,var207_C)
    double var207_C = C - var16; // 2Pz - 2P(var205_A,var206_B,var207_C) // z de SCARA
    double var208 = var205_A*var205_A; 
    double var209 = var206_B*var206_B; 
    double var210 = var207_C*var207_C; 
    //double var25 = abs(sqrt(var208+var209)); // Componente XY para el cálculo del segundo grupo de motores de SCARA
  
// Segundo Grupo (motores 3-4-5 con análisis de motores 3-4) y Plano único (Con análisis de plano y ángulo de ataque)
// Teta 5
  double var52_2 = sqrt(var208+var209+var210); // Distancia entre O' y el punto final de destino para el cálculo de Teta5
  double var90 = L3p + L4 + L5;  // L3p+L4+L5 = 395
  double var52 = coefAnguloDeAtaque; // Coeficiente para hacer más agudo Teta5 cuanto más pequeña sea la distancia entre O' y el punto final de destino hasta, por ejemplo, hacerlo vertical como ángulo de ataque)
  if (var52_2 >= var90 and coefAnguloDeAtaque == 0) { 
    var52 = 0.5; // Variable k = Constante para buscar cierto equilibrio de los 3 Teta en SCARA con 3 motores. Puede ser 1.3 para acercarse más a la vertical.
  }else if ((var52_2 >= var90*8/9) and (var52_2 < var90)  and coefAnguloDeAtaque == 0) { // (L3p+L4+L5)*8/9  -  L3p+L4+L5
     var52 = 1; 
  }else if ((var52_2 >= var90*7/9) and (var52_2 < var90*8/9)  and coefAnguloDeAtaque == 0) { // (L3p+L4+L5)*7/9  -  (L3p+L4+L5)*8/4
     var52 = 1.4; 
  }else if ((var52_2 >= var90*6/9) and (var52_2 < var90*7/9)  and coefAnguloDeAtaque == 0) { // (L3p+L4+L5)*6/9  -  (L3p+L4+L5)*7/4
     var52 = 1.8; 
  }else if ((var52_2 >= var90*5/9) and (var52_2 < var90*6/9)  and coefAnguloDeAtaque == 0){
     var52 = 2.2;     
  }else if ((var52_2 >= var90*4/9) and (var52_2 < var90*5/9)  and coefAnguloDeAtaque == 0){
     var52 = 2.6;     
  }else if ((var52_2 >= var90*3/9) and (var52_2 < var90*4/9)  and coefAnguloDeAtaque == 0){
     var52 = 3;     
  }else if ((var52_2 >= var90*2/9) and (var52_2 < var90*3/9)  and coefAnguloDeAtaque == 0){
     var52 = 3.2;     
  }else if ((var52_2 >= var90/9) and (var52_2 < var90*2/9)  and coefAnguloDeAtaque == 0){
     var52 = 3.4;     
  }else if (coefAnguloDeAtaque == 0){
     var52 = 3.6;     
  }

  double var91 = acos(abs(sqrt(var208+var209))/var90); // **** // Ángulo de (L'3+L4+L5) con la vertical del punto de destino para el cálculo de Teta5
  //double var91grados = radianesAGrados(var91);  // ****
  double resulTeta5radianes = var52*(L5/var90)*var91; // **** // Teta5 inversamente proporcional a L5 
  double resulTeta5grados = radianesAGrados(resulTeta5radianes);  // ****
  if (imprimir0 == 0 or imprimir0 == 1) {
      Serial.print(F("\n************ Teta5 "));
      Serial.print(F("\nk (Factor de Teta5: "));Serial.print(var52); Serial.print(F(" - Teta5: "));Serial.print(resulTeta5grados);
      Serial.print(F(" - var52_2 (Distancia aproximada de P al punto P2:): "));Serial.print(var52_2);
  }  
  if (imprimir0 == 1) {
      Serial.print(F("\n - var90 (L3p + L4 + L5): "));Serial.print(var90);
      //Serial.print(F(" - var91 (acos(abs(sqrt(var208+var209))/var90)): "));Serial.print(var91grados);
      Serial.print(F(" - resulTeta5grados (var52*(L5/var90)*var91): "));Serial.println(resulTeta5grados);
  }

// Teta 4
//  Expresión de SCARA / Se hace que L4 y L5 formen un único segundo segmento con un ángulo Teta4p para calcular luego Teta4 al restar Fipp. Es común a ORI y su alternativa. 
  double var32 = L3p*L3p;
  double var202 = abs(atan(L5*sin(resulTeta5radianes)/(L4+L5*cos(resulTeta5radianes)))); // Fipp
  double var203 = (L4+L5*cos(resulTeta5radianes))*(L4+L5*cos(resulTeta5radianes)) + (L5*sin(resulTeta5radianes))*(L5*sin(resulTeta5radianes)); 
  double var204 = abs(sqrt(var203)); // Hipotenusa para calcular Teta4p // Es el segmento hecho como suma de L4 y L5 con Teta5 para llegar al punto.

// ORI de Teta4 /* 
  double resulTeta4pradianes_2 = abs(acos((var208+var209+var210-var203-var32)/(2*var204*L3p))); // Teta4p // ****
  double resulTeta4pgrados_2 = radianesAGrados(resulTeta4pradianes_2);  // ****
  double resulTeta4radianes_2 = resulTeta4pradianes_2 - var202;  // ****
  double resulTeta4grados_2 = radianesAGrados(resulTeta4radianes_2);  // ****
  Serial.print(F("\n************ Teta4"));
  if (imprimir0 == 1) {
    Serial.print(F(" - var204 (hipotenusa entre L4 y L5): "));Serial.print(var204);
    Serial.print(F("   - sqrt(var208+var209) (Pxy): "));Serial.print(sqrt(var208+var209));
    Serial.print(F("   - sqrt(var210) (h): "));Serial.print(sqrt(var210));
    Serial.print(F("\n - resulTeta4pgrados_2 (Teta4p) Teta4_2: "));Serial.print(resulTeta4pgrados_2);
    Serial.print(F("- var202 (Fipp) Teta4_2: "));Serial.println(radianesAGrados(var202));
  }  
  Serial.print(F(" - resulTeta4grados_2: "));Serial.print(resulTeta4grados_2);
// Fin de ORI de Teta4 */ 

// Teta4 Alternativa - Expresión de SCARA /*
 // Con esta alternativa parece ir bien incluso con Teta2=0. De hecho parece dar los mismos resultados, aún siendo otro modelo de cálculo.
  double Lb = abs(tan(resulTeta2radianes) * var207_C);
  double Lh = abs(sqrt(Lb*Lb + var207_C*var207_C));
  double Pmod = abs(sqrt(var208+var209+var210)); 
  double Ppxy = abs(sqrt(Pmod*Pmod - Lh*Lh)); // Componente XY para el cálculo del segundo grupo de motores de SCARA en la alternativa 
  double resulTeta4pradianes_3 = abs(acos((Lh*Lh+Ppxy*Ppxy-var203-var32)/(2*var204*L3p))); // Teta4p // ****
  double resulTeta4radianes_3 = resulTeta4pradianes_3 - var202;  // ****
  double resulTeta4grados_3 = radianesAGrados(resulTeta4radianes_3);  // ****
if (imprimir0 == 1) {
    Serial.print(F("\nAlternativa - Teta4 - Lb: "));Serial.print(Lb);
    Serial.print(F("   - var207_C: "));Serial.print(var207_C);
    Serial.print(F("   - Lh: "));Serial.print(Lh);
    Serial.print(F("   - Pmod: "));Serial.print(Pmod);
    Serial.print(F("   - Ppxy: "));Serial.print(Ppxy);
    Serial.print(F("   - var204: "));Serial.println(var204);
}
    Serial.print(F(" - resulTeta4grados_3: "));Serial.println(resulTeta4grados_3);
// Fin de la alternativa a Teta4 */  

  double resulTeta4radianes = resulTeta4radianes_3; // ****  
  double resulTeta4grados = resulTeta4grados_3; // ****
  if (Option2 == 14) { // No falla, sino que va igual pero es para mostrar el resultado de otro tipo de cálculo.
    resulTeta4radianes = resulTeta4radianes_2; // **** // Ambas funcionan. Están pensadas de forma diferente pero dan las mismas ecuaciones finales. 
    resulTeta4grados = resulTeta4grados_2; // ****
  }

if (imprimir0 == 0) {
    Serial.print(F("Teta4 - var14 (OP2x): "));Serial.print(var14);
    Serial.print(F("   - var15 (OP2y): "));Serial.print(var15);
    Serial.print(F("   - var16 (OP2z): "));Serial.print(var16);
}

// Teta 3
 // ORI de Teta3  // /*
  // **** // Con A-var14 y B-var15 (Con L4 y L5 unidos) usando 2P y con Fip y Teta3p. // Se simula como si fuera el plano en vertical en lugar de las medidas reales del plano de ataque.
  double var435 = var204*cos(resulTeta4pradianes_2); // var204 = Hipotenusa de L4 y L5
  double var436 = var204*sin(resulTeta4pradianes_2); 
  double var437 = var436*var436;
  double var438 = L3p + var435;
  double var439 = abs(sqrt(var208+var209)); // xy de 2P
  double resulTeta3pradianes_3_1 = abs(atan(var436/var438)); // Teta3p
  double resulTeta3pradianes_3_2 = abs(atan(var207_C/var439)); // Tetap
  double resulTeta3radianes_3 = 0;
  if (var207_C >= 0 and var435 >= -L3p){ // Cuando hipotenusa_de_P*cos(Teta4p) es mayor o igual que L3p //  and var435 >= 0
    resulTeta3radianes_3 = resulTeta3pradianes_3_1 + resulTeta3pradianes_3_2; 
    Serial.print(F("\n************ Teta3 - Caso 1 - (var207_C >= 0 and var435 >= -L3p)"));
  } else if (var207_C >= 0 and var435 < -L3p){ // Cuando hipotenusa_de_P*cos(Teta4p) es menor o igual que L3p
    resulTeta3radianes_3 = resulTeta3pradianes_3_1 - resulTeta3pradianes_3_2; 
    Serial.print(F("\n************ Teta3 - Caso 2 - (var207_C >= 0 and var435 < -L3p)"));
  } else if (var207_C < 0 and var435 >= -L3p){ // Cuando la hipotenusa de P es mayor o igual que L3p
    resulTeta3radianes_3 = resulTeta3pradianes_3_1 - resulTeta3pradianes_3_2; 
    Serial.print(F("\n************ Teta3 - Caso 3 - (var207_C < 0 and var435 >= -L3p)"));
  } else if (var207_C < 0 and var435 < -L3p){ // Cuando hipotenusa_de_P*cos(Teta4p) es menor que L3p
    resulTeta3radianes_3 = -90 + resulTeta3pradianes_3_1 + resulTeta3pradianes_3_2; 
    Serial.print(F("\n************ Teta3 - Caso 4 - (var207_C < 0 and var435 < -L3p)"));
  } else{
    Serial.print(F("\n************ Teta3 - ZONA SIN PARAMETRIZAR"));
  }
  double resulTeta3pgrados_3_1 = radianesAGrados(resulTeta3pradianes_3_1);  // ****
  double resulTeta3pgrados_3_2 = radianesAGrados(resulTeta3pradianes_3_2);  // ****
  double resulTeta3grados_3 = radianesAGrados(resulTeta3radianes_3);  // ****
if (imprimir0 == 1) {
    Serial.print(F("\n - resulTeta3pgrados_3_1: "));Serial.print(resulTeta3pgrados_3_1);
    Serial.print(F(" - resulTeta3pgrados_3_2: "));Serial.print(resulTeta3pgrados_3_2);
    Serial.print(F(" - resulTeta3grados_3: "));Serial.print(resulTeta3grados_3);
}
 // Fin de ORI de Teta3  // */ 

// /*  Coincide con la anterior en Teta2=0 pero no para valores distintos de 0.
// Se utilizan medidas reales en el plano de ataque.
// Teta3 Alternativa // Va bien con cualquier Teta2.
  double resulTeta3pradianes_4_1 = abs(atan(var204*sin(resulTeta4pradianes_3)/(L3p+var204*cos(resulTeta4pradianes_3))));
  double resulTeta3pradianes_4_2 = abs(atan(Lh/Ppxy));  
  double resulTeta3radianes_4 = 0;
  if (var207_C >= 0 and var435 >= -L3p){ // Cuando hipotenusa_de_P*cos(Teta4p) es mayor o igual que L3p //  and var435 >= 0
    resulTeta3radianes_4 = resulTeta3pradianes_4_1 + resulTeta3pradianes_4_2; 
    Serial.print(F("\nAlternativa - Teta3 - Caso 1 - (var207_C >= 0 and var435 >= -L3p)"));
  } else if (var207_C >= 0 and var435 < -L3p){ // Cuando hipotenusa_de_P*cos(Teta4p) es menor o igual que L3p
    resulTeta3radianes_4 = resulTeta3pradianes_4_1 - resulTeta3pradianes_4_2; 
    Serial.print(F("\nAlternativa - Teta3 - Caso 2 - (var207_C >= 0 and var435 < -L3p)"));
  } else if (var207_C < 0 and var435 >= -L3p){ // Cuando la hipotenusa de P es mayor o igual que L3p
    resulTeta3radianes_4 = resulTeta3pradianes_4_1 - resulTeta3pradianes_4_2; 
    Serial.print(F("\nAlternativa - Teta3 - Caso 3 - (var207_C < 0 and var435 >= -L3p)"));
  } else if (var207_C < 0 and var435 < -L3p){ // Cuando hipotenusa_de_P*cos(Teta4p) es menor que L3p
    resulTeta3radianes_4 = resulTeta3pradianes_4_1 + resulTeta3pradianes_4_2; 
    Serial.print(F("\nAlternativa - Teta3 - Caso 4 - (var207_C < 0 and var435 < -L3p)"));
  } else{
    Serial.print(F("\nAlternativa - Teta3 - ZONA SIN PARAMETRIZAR"));
  }
  double resulTeta3pgrados_4_1 = radianesAGrados(resulTeta3pradianes_4_1);  // ****
  double resulTeta3pgrados_4_2 = radianesAGrados(resulTeta3pradianes_4_2);  // ****
  double resulTeta3grados_4 = radianesAGrados(resulTeta3radianes_4); // ****
if (imprimir0 == 1) {
    Serial.print(F("\n - resulTeta3pgrados_4_1: "));Serial.print(resulTeta3pgrados_4_1);
    Serial.print(F(" - resulTeta3pgrados_4_2: "));Serial.print(resulTeta3pgrados_4_2);
    Serial.print(F(" - resulTeta3grados_4: "));Serial.println(resulTeta3grados_4);
}
//  */ 
if (imprimir0 == 1) {
    Serial.print(F("Teta3 Comunes a ORI y Alternativa - var435 (var204*cos(resulTeta4pradianes)): "));Serial.print(var435);
    Serial.print(F(" - var436 (var204*sin(resulTeta4pradianes)): "));Serial.print(var436);
    Serial.print(F("\n - var437 (var436*var436): "));Serial.print(var437);
    Serial.print(F(" - var438 (L3p + var435): "));Serial.print(var438);
    Serial.print(F(" - var439 (abs(sqrt(var208+var209))): "));Serial.println(var439);
}

  double resulTeta3radianes = resulTeta3radianes_4; // **** // Va bien para cualquier Teta2. Usa medidas reales del plano de ataque.
  double resulTeta3grados = resulTeta3grados_4; // **** 
  if (Option2 == 13) { // Para mostrar el fallo en caso de no considerar Teta1 en función del ángulo del plano de ataque.
    resulTeta3radianes = resulTeta3radianes_3; // Sólo va bien para cualquier Teta2=0. Simula una vertical. // Buen ejemplo de fallo.
    resulTeta3grados = resulTeta3grados_3;  
  }

// Se podría hacer con radianes como en los if anteriores, pero se ve más fácilmente cuando se pasan a grados.
if (B < 0) { // var206_B = B - var15; // 2P4y // 2P4z < 0 // Se cambia resulTeta3grados por ser desde la vertical para el caso de SCARA.
    if (var207_C >= 0 and var435 >= -L3p) { // Caso 4 // Codo arriba // var207_C = C - var16; // 2P4z 
      resulTeta3grados = 90 - resulTeta3grados; // - por ser desde la vertical.
      Serial.print(F(" - ***** Caso 4 ")); 
      if (imprimir0 == 1) {
        Serial.print(F(" - resulTeta3grados (90 - resulTeta3grados)= "));Serial.println(resulTeta3grados); 
      }
    } else if (var207_C >= 0 and var435 < -L3p) { // Caso 5 // Codo arriba // var207_C = C - var16; // 2P4z 
      resulTeta3grados = -90 + resulTeta3grados; // - por ser desde la vertical. // var207_C < 0 and var435 >= -L3p
      Serial.print(F(" - ***** Caso 5 ")); 
      if (imprimir0 == 1) {
        Serial.print(F(" - resulTeta3grados (-90 + resulTeta3grados)= "));Serial.println(resulTeta3grados); 
      } 
    } else if (var207_C < 0 and var435 < -L3p){ // Caso 6, Caso 7 // Codo arriba // var207_C = C - var16; // 2P4z  
      //resulTeta3grados = -90 + resulTeta3grados; // - por ser desde la vertical. // var207_C < 0 and var435 >= -L3p
      resulTeta3grados = -90 + resulTeta3grados; // - por ser desde la vertical. // var207_C < 0 and var435 >= -L3p
      Serial.print(F("\n - ***** Caso 6,7-1 ")); 
      if (imprimir0 == 1) {
        Serial.print(F(" - resulTeta3grados (-90 + resulTeta3grados)= "));Serial.println(resulTeta3grados);  
      } 
    } else if (var207_C < 0 and var435 >= -L3p){ // Caso 6, Caso 7 // Codo arriba // var207_C = C - var16; // 2P4z  
      resulTeta3grados = 90 - resulTeta3grados; // - por ser desde la vertical.
      Serial.print(F("\n - ***** Caso 6,7-2 ")); 
      if (imprimir0 == 1) {
        Serial.print(F(" - resulTeta3grados (90 - resulTeta3grados)= "));Serial.println(resulTeta3grados);  
      }  
    }  
  } else if (B >= 0) { // var206_B = B - var15; // 2P4y
    if (var207_C < 0 and var435 >= -L3p) { // Caso 1,8 // Codo abajo - 180º de diferencia en θ1 // var207_C = C - var16; // 2P4z
      resulTeta5grados = -resulTeta5grados;
      resulTeta4grados = -resulTeta4grados;
      resulTeta3grados = -90 + resulTeta3grados; // - por ser desde la vertical.
      Serial.print(F(" - ***** Caso 1,8 ")); 
      if (imprimir0 == 1) {
        Serial.print(F(" - resulTeta3grados (-90 + resulTeta3grados)= "));Serial.println(resulTeta3grados);  
      }  
    } else if (var207_C < 0 and var435 < -L3p) { // Caso 1,8 // Codo abajo - 180º de diferencia en θ1 // var207_C = C - var16; // 2P4z
      resulTeta5grados = -resulTeta5grados;
      resulTeta4grados = -resulTeta4grados;
      resulTeta3grados = -(-90 + resulTeta3grados); // - por ser desde la vertical.
      Serial.print(F(" - ***** Caso 1,8 ")); 
      if (imprimir0 == 1) {
        Serial.print(F(" - resulTeta3grados (-(-90 + resulTeta3grados))= "));Serial.println(resulTeta3grados);  
      }   
    } else if (var207_C >= 0 and var435 >= -L3p) { // Caso 2 // Codo abajo - 180º de diferencia en θ1 // var207_C = C - var16; // 2P4z 
      resulTeta5grados = -resulTeta5grados;
      resulTeta4grados = -resulTeta4grados;
      resulTeta3grados = -(90 - resulTeta3grados); // - por ser desde la vertical.
      Serial.print(F(" - ***** Caso 2 ")); 
      if (imprimir0 == 1) {
        Serial.print(F(" - resulTeta3grados (-(90 - resulTeta3grados))= "));Serial.println(resulTeta3grados);  
      }  
    } else if (var207_C >= 0 and var435 < -L3p) { // Caso 4-2 // Codo arriba // var207_C = C - var16; // 2P4z // var205_A = A - var14; // 2P4x
      resulTeta5grados = -resulTeta5grados;
      resulTeta4grados = -resulTeta4grados;
      resulTeta3grados = -(-90 + resulTeta3grados); // - por ser desde la vertical.
      Serial.print(F(" - ***** Caso 4-2 ")); 
      if (imprimir0 == 1) {
        Serial.print(F(" - resulTeta3grados (-(-90 + resulTeta3grados))= "));Serial.println(resulTeta3grados);  
      }  
    } 
  } // fin de if (var206_B)

// Se había cambiado resulTeta3grados por ser desde la vertical para el caso de SCARA. Pero hay que utilizar el original (resulTeta3radianes_3) para calcular el punto.
// Además se deshace el cambio de los grados a radianes teniendo en cuenta que se han modificado lo grados para adecuarse a los cuadrantes.
  resulTeta3radianes = gradosARadianes(resulTeta3grados);
  resulTeta4radianes = gradosARadianes(resulTeta4grados);
  resulTeta5radianes = gradosARadianes(resulTeta5grados);

  GiroCalculado[0] = resulTeta1grados; // Se meten los valores en un array para extraerlos cuando giren los motores hasta que no haya más giros calculados. Se podnrán tantas líneas como motores definidos con movimiento.
  GiroCalculado[1] = resulTeta2grados; GiroCalculado[2] = resulTeta3grados; GiroCalculado[3] = resulTeta4grados; GiroCalculado[4] = resulTeta5grados;

// OP3 - DH 11111 - Prueba para poner P3 en función de las matrices de los tres primeros motores 
  double var56 = L2*sin(resulTeta1radianes)-L2p*cos(resulTeta1radianes)*sin(resulTeta2radianes)+L3*cos(resulTeta1radianes)*cos(resulTeta2radianes)+L3p*sin(resulTeta1radianes)*sin(resulTeta3radianes)
  -L3p*cos(resulTeta1radianes)*sin(resulTeta2radianes)*cos(resulTeta3radianes); // OP3x(DH) - OP3(var56,var57,var58) // P3 respecto a la Base por Cinemática Directa  
  double var57 = -L2p*sin(resulTeta2radianes)*sin(resulTeta1radianes)-L2*cos(resulTeta1radianes)-L3p*cos(resulTeta1radianes)*sin(resulTeta3radianes)+L3*sin(resulTeta1radianes)*cos(resulTeta2radianes)
  -L3p*sin(resulTeta2radianes)*cos(resulTeta3radianes)*sin(resulTeta1radianes); // OP3y(DH) - OP3(var56,var57,var58)
  double var58 = L1+L3*sin(resulTeta2radianes)+L2p*cos(resulTeta2radianes)+L3p*cos(resulTeta3radianes)*cos(resulTeta2radianes); // OP3z(DH) - OP3(var56,var57,var58)
// OP4 - DH
  double var61 = L2*sin(resulTeta1radianes)-L2p*cos(resulTeta1radianes)*sin(resulTeta2radianes)+L3*cos(resulTeta1radianes)*cos(resulTeta2radianes)+L3p*sin(resulTeta1radianes)*sin(resulTeta3radianes)
  +L4*cos(resulTeta4radianes)*(sin(resulTeta1radianes)*sin(resulTeta3radianes)-cos(resulTeta1radianes)*sin(resulTeta2radianes)*cos(resulTeta3radianes))
  +L4*sin(resulTeta4radianes)*(cos(resulTeta3radianes)*sin(resulTeta1radianes)+cos(resulTeta1radianes)*sin(resulTeta2radianes)*sin(resulTeta3radianes))
  -L3p*cos(resulTeta1radianes)*sin(resulTeta2radianes)*cos(resulTeta3radianes); // OP4x(DH) - OP4(var61,var62,var63) // P4 respecto a la Base por Cinemática Directa  
  double var62 = -L2p*sin(resulTeta2radianes)*sin(resulTeta1radianes)-L2*cos(resulTeta1radianes)-L3p*cos(resulTeta1radianes)*sin(resulTeta3radianes)+L3*sin(resulTeta1radianes)*cos(resulTeta2radianes)
  -L4*cos(resulTeta4radianes)*(cos(resulTeta1radianes)*sin(resulTeta3radianes)+sin(resulTeta2radianes)*cos(resulTeta3radianes)*sin(resulTeta1radianes))
  -L4*sin(resulTeta4radianes)*(cos(resulTeta1radianes)*cos(resulTeta3radianes)-sin(resulTeta2radianes)*sin(resulTeta1radianes)*sin(resulTeta3radianes))
  -L3p*sin(resulTeta2radianes)*cos(resulTeta3radianes)*sin(resulTeta1radianes); // OP4y(DH) - OP4(var61,var62,var63) 
  double var63 = L1+L3*sin(resulTeta2radianes)+L2p*cos(resulTeta2radianes)+L3p*cos(resulTeta3radianes)*cos(resulTeta2radianes)
  +L4*cos(resulTeta3radianes)*cos(resulTeta4radianes)*cos(resulTeta2radianes)
  -L4*cos(resulTeta2radianes)*sin(resulTeta3radianes)*sin(resulTeta4radianes); // OP4z(DH) - OP4(var61,var62,var63) 

  if (imprimir0 == 0 or imprimir0 == 1) {
    Serial.print(F("\npuntoF[]= ( "));Serial.print(A); Serial.print(F(" , "));Serial.print(B); Serial.print(F(" , "));Serial.print(C); Serial.println(F(" )"));
    Serial.print(F("L1: "));Serial.print(L1);Serial.print(F(" - L2: "));Serial.print(L2);Serial.print(F(" - L2p: "));Serial.print(L2p);    
    Serial.print(F(" - L3: "));Serial.print(L3);Serial.print(F(" - L3p: "));Serial.print(L3p);
    Serial.print(F(" - L4: "));Serial.print(L4);Serial.print(F(" - L5: "));Serial.println(L5);   

    Serial.print(F("Primer Grupo (motores 1-2)"));
    Serial.print(F("-P1(var11,12,13)=("));Serial.print(var11);Serial.print(F(","));Serial.print(var12);Serial.print(F(","));Serial.print(var13);Serial.print(F(")"));
    Serial.print(F(" -P2(var14,15,16)=("));Serial.print(var14);Serial.print(F(","));Serial.print(var15);Serial.print(F(","));Serial.print(var16);Serial.println(F(")"));
    
    Serial.print(F("Segundo Grupo (motores 3-4 + 5 )"));
    Serial.print(F("\n -P3(var56,57,58)-DH-Real(Con 3 motores y desplazamiento desde P3 como origen: 0)=("));Serial.print(var56);Serial.print(F(","));Serial.print(var57);Serial.print(F(","));Serial.print(var58);Serial.print(F(")"));
    Serial.print(F("\n -P4(var61,62,63)-DH-Real(Con 4 motores y desplazamiento desde P3 como origen: 0)=("));Serial.print(var61);Serial.print(F(","));Serial.print(var62);Serial.print(F(","));Serial.print(var63);Serial.print(F(")"));
    Serial.print(F("\n -(2P-Real - Resta P-P2xyz)-Pp(var205_A,var206_B,var207_C)=("));Serial.print(var205_A);Serial.print(F(","));Serial.print(var206_B);Serial.print(F(","));Serial.print(var207_C);Serial.println(F(")"));    
    Serial.print(F(" - resulTeta1= "));Serial.print(resulTeta1grados);Serial.print(F(" - resulTeta2: "));Serial.print(resulTeta2grados);
    Serial.print(F(" - resulTeta3: "));Serial.print(resulTeta3grados);Serial.print(F(" - resulTeta4: "));Serial.print(resulTeta4grados);
    Serial.print(F(" - resulTeta5: "));Serial.println(resulTeta5grados);
  } // Termina el if (imprimir0 == 1)

// Comprobación de datos calculado el punto a partir de las variables resulTeta1, resulTeta2, resulTeta1, La, L2 y L3
// Calcula el punto resultante para ver si coincide con el definido (No lo hará por los parámetros de di  yri no tenidos en cuenta) y mueve los motores.
// calDHdirectoNmotores(); // Ya no hace falta al ejecutar la comprobación del punto, tras el cálculo de los ángulos en la función setup().
return 0;
}

void dibujarCircunferenciaCI_1_0(){ // Calcula y mueve el brazo sobre los puntos que determinan un círculo respecto al Sistema de Coordenadas Base mediante los dos primeros motores   
  Serial.println(F("*************** dibujarCircunferenciaCI ***************"));
  // Círculo (x2 + Y2 = r2) cambiado los puntos y no lo ángulos de los diferentes motores
  //double puntoF[] = {0, 0, 631};  
  int j;
  double A = -200;
  double B = abs(sqrt(211.0*211.0-A*A));
  double C = 400;
  calDHinversoNmotores_1_0(A, B, C); 
  calDHdirectoNmotores(); 
  moverMotores();
  delay(1000);
  Serial.println(F("Y positivos .... "));  
  for (j = -210; j < 210 ; j = j + 5) {
    // Cálculo de las ecuaciones de DH para cinemática directa
    A = j;
    B = abs(sqrt(211.0*211.0-A*A));
    calDHinversoNmotores_1_0(A, B, C); 
    calDHdirectoNmotores(); 
    moverMotores();
    Serial.print(F("X = ")); Serial.print(A); Serial.print(F("  - Y = ")); Serial.println(B); 
    delay(50);
  }
  A = 200;
  B = abs(sqrt(211.0*211.0-A*A));
  calDHinversoNmotores_1_0(A, B, C); 
  calDHdirectoNmotores(); 
  moverMotores();
  delay(1000);
  Serial.println(F("Y negativos .... "));  
  for (j = 210; j > -210 ; j = j - 5) {
    // Cálculo de las ecuaciones de DH para cinemática directa
    A = j;
    B = -abs(sqrt(211.0*211.0-A*A));
    calDHinversoNmotores_1_0(A, B, C); 
    calDHdirectoNmotores(); 
    moverMotores();
    Serial.print(F("X = ")); Serial.print(A); Serial.print(F("  - Y = ")); Serial.println(B); 
    delay(50);
  }
}

void dibujarCuadradoCI_1_0(){ // Calcula las posiciones teóricas de los puntos que determinan los vértices de un cuadrado respecto al Sistema de Coordenadas Base   
  Serial.println(F("*************** dibujarCuadradoCI ***************"));
  double A;
  double B;
  double C;
  // Posición central seguido de un cuadrado y otro central si se le pasa 6 puntos en un array   
  double punto2[21][3] = {{-60, -60, 500}, {60, -60, 500}, {60, 60, 500}, {-60, 60, 500}, 
  {-200, -200, 450}, {200, -200, 450}, {200, 200, 450}, {-200, 200, 450}, 
  {-200, -200, 300}, {200, -200, 300}, {200, 200, 300},  {-200, 200, 300}, 
  {-200, -200, 100}, {200, -200, 100}, {200, 200, 100}, {-200, 200, 100}, 
  {-70, -70, 70}, {70, -70, 70}, {70, 70, 70}, {-70, 70, 70},
  {-200, 0, -50}};
  int j;
  for (j = 0; j < 21 ; j = j + 1) {
    A = punto2[j][0];
    B = punto2[j][1];
    C = punto2[j][2];
    // Cálculo de las ecuaciones de DH para cinemática directa
    calDHinversoNmotores_1_0(A, B, C); 
    delay(1000);
    calDHdirectoNmotores();
    delay(1000);
    moverMotores();
    Serial.print(F("j = "));Serial.print(j); // j recorre los puntos que correspondan
    Serial.print(F(" - punto (X, Y, Z) = (")); Serial.print(A); Serial.print(F(", ")); ; Serial.print(B); Serial.print(F(", ")); ; Serial.print(C); Serial.println(F(")")); 
  }
}

//************************************************************************************************
// Funciones para el movimiento de los motores tanto en Cinemática Directa como en Cinemática Inversa.
void moverMotores(){
  Serial.println(F("*************** moverMotores ***************"));
    // Ahora se mueven los motores y una vez hecho, el punto calculado debería haber sido alcanzado con el extremo del brazo.
  int j; // Índice para hacer el seguimiento de articulaciones totales
  // Se ha cambiado los signos de los ángulos 0 y 180... en el motor 1 (segundo motor)
  if (Teta1ORIInverso == 0 and Teta1ALTInverso == 0) { // Si no hay errores en ángulo Teta1 de calDHinversoNmotores_1_0(). Si se produce un error no se mueve el brazo y quedará en reposo (vertical).
    for (j = 0; j < numart; j = j + 1) { // Se prepara así por si en algún momento se implementa la posibilidad de meter un codo sin motor, sólo desplazamiento.
        // Una vez metido en "angMotor[j]" el valor final del ángulo a girar en el motor, ahora se van a mover los valores calculados
        if (abs(msecMotor[j]- msecMin[j]) > abs(msec0[j]- msecMin[j]) and abs(msecMotor[j]- msecMax[j]) > abs(msec0[j]- msecMax[j])) {
          Serial.print(F(" Se ha superado un ángulo límite el motor  "));Serial.print(j);  Serial.print(F(" - msecMotor[j] = "));Serial.println(msecMotor[j]); 
        } else {
          servos.setPWM(j, 0, msecMotor[j]); // int setbounds(int servo, int minposition, int maxposition); (Returns 0 if successfully set; returns 1 if instruction failed) // Adafruit
        }
      // También se refuerza la posición del motor cuando éste no tiene un nuevo movimiento.
    } // Termina el for (j)
  }
}

void setup() {
  Serial.begin(115200);
  servos.begin(); // Una única tarjeta PCA9685 para la gestión de los motores 
  servos.setPWMFreq(60); // Frecuecia PWM de 60Hz o T=16,66ms
  Serial.println("Inicializa la posición de los servos...");

  // Se define la posición inicial del brazo.
  setServos01234();
  Datos(); // Se ejecuta para definir los valores de las variables en cada caso.
  //DH[] = {1, 0, 1, 1, 0, 0, 0, 0, 0, 0}; // 1:motor ; 0:codo (Se prepara así por si en algún momento se implementa la posibilidad de meter un codo sin motor, sólo desplazamiento)
  //DHdimodificado[] = {236, 0, 0, 0, 0, 0, 0, 0, 0, 0}; // Valores de los datos di de DH para pruebas de diferentes número de motores con algunos rotando y otros en posición de reposo. 
  //DHrimodificado[] = {0, 0, 105, 290, 0, 0, 0, 0, 0, 0}; // Valores de los datos ri de DH para pruebas de diferentes número de motores con algunos rotando y otros en posición de reposo. 
  delay(2000);
  
  //****************************************************************************************
  // Menú de Pruebas de movimiento.  
    double A;
    double B;
    double C;
  if (Option == 1) { // Prueba de del sentido de los movimientos del ejemplo 3_1.
    pruebaDeMovimientosCD(); // pruebaDeMovimientosCD() - Define 4 posiciones con ángulos diferentes, mueve el brazo y calcula los puntos por DH. 
    calDHdirectoNmotores(); // Tanto para Cinemática Directa, cuando se ha calculado tras definir los ángulos de los motores, 
                                    // como para Cinemática Inversa, para comprobar que el punto calculado coincide con el buscado.
                                    // Después de mover motores para modificar angMotor[] y mover esa cantidad en lugar de DHbi2[] - Hay que cambiar esto...
    setServos01234();
  } else if (Option == 2) { // Sólo se calculan los vértices de un cuadrado mediante Cinemática Directa (matriz de parámetros de DH), pero no se mueve el brazo.
    // dibujarCuadradoCD() - Usa calDHinversoNmotores_3_1() con datos de puntos de los vértices mediante de un cuadrado mediante Cinemática Directa y calcula los datos de posición. 
    dibujarCuadradoCD();
    setServos01234();  
  } else if (Option == 3) { // Se dibuja un cuadrado mediante Cinemática Inversa
    // dibujarCuadradoCI() - Usa calDHinversoNmotores_3_1() con datos de puntos de los vértices mediante de un cuadrado mediante Cinemática Directa y calcula los datos de posición.
    // El tercer punto del cuadrado superior tiene el codo hacia abajo. 
    dibujarCuadradoCI();
    setServos01234();
  } else if (Option == 4) { // Se calculan los puntos de una circunferencia mediante Cinemática Directa (matriz de parámetros de DH), y se mueve el brazo. 
    // dibujarCircunferenciaCD() - Va sumando de grado en grado, mueve los motores (el brazo) y calcula los datos de posición. 
    dibujarCircunferenciaCD();
    setServos01234();
  } else if (Option == 5) { // Se dibuja una circunferencia mediante Cinemática Inversa
    // dibujarCircunferenciaCI() - Usa calDHinversoNmotores_3_1() con datos de puntos sacados de la ecuación de una circunferencia y calcula los datos de posición.
    dibujarCircunferenciaCI();
    setServos01234();
  
  //****************************************************************************************
  } else if (Option == 6) { // Cálculo de las ecuaciones de DH para Cinemática Directa 
    // Sólo se trata de hacer el cálculo de DH, sin más. Y la posición de la que proviene es la de inicio mediante setServos01234() (verical con todos los motores a 0º)
    // Para modificarlo, antes habría que definir un punto punto6[] y ejecutar calDHinversoNmotores_i_j o definir un ángulo y ejecutar alguna función con CD.
    //double punto6[] = {0, 0, 100};  
    A = puntoF6[0];
    B = puntoF6[1];
    C = puntoF6[2];
    calDHdirectoNmotores(); // Tanto para Cinemática Directa, cuando se ha calculado tras definir los ángulos de los motores, 
                                    // como para Cinemática Inversa, para comprobar que el punto calculado coincide con el buscado.
                                    // Después de mover motores para modificar angMotor[] y mover esa cantidad en lugar de DHbi2[] - Hay que cambiar esto...

  //****************************************************************************************
  } else if (Option == 7) { // Ejemplo 3-1 - Tres motores, con el primer motor perpendicular al suelo, y el resto perpendicular al primero. Ecuaciones de DH para Cinemática Inversa.   
    //double puntoF7[] = {200, 200, 300}; // Y0 positivas a izquierda (90) y negativas a derecha (-90) // X0 positivas detrás (90) y negativas delante (-90)
    A = puntoF7[0];
    B = puntoF7[1];
    C = puntoF7[2];
    calDHinversoNmotores_3_1(A, B, C); // calDHinversoNmotores_3_1() - Se calculan los puntos y se buscan mediante calDHinversoNmotores_4_0(), se mueve el brazo y se calculan pro DH para comprobarlo. 
    calDHdirectoNmotores(); // Tanto para Cinemática Directa cuando se ha calculado tras definir los ángulos de los motores, 
                                  // como para Cinemática Inversa al comprobar que el punto calculado coincide con el buscado.
                                  // Después de mover motores para modificar angMotor[] y mover esa cantidad en lugar de DHbi2[] - Hay que cambiar esto...
  } else if (Option == 8) { // SIN HACER // Ejemplo 4-0 - Cuadrípodo - Cuatro motores. Ecuaciones de DH para Cinemática Inversa.
    //double puntoF8[] = {200, 200, 300}; // Y0 positivas a izquierda (90) y negativas a derecha (-90) // X0 positivas detrás (90) y negativas delante (-90)
    A = puntoF8[0];
    B = puntoF8[1];
    C = puntoF8[2];
    calDHinversoNmotores_4_0(A, B, C); // calDHinversoNmotores_4_0() - Se calculan los puntos y se buscan mediante calDHinversoNmotores_4_0(), se mueve el brazo y se calculan pro DH para comprobarlo. 
    calDHdirectoNmotores(); // Tanto para Cinemática Directa cuando se ha calculado tras definir los ángulos de los motores, 
                                  // como para Cinemática Inversa al comprobar que el punto calculado coincide con el buscado.
                                  // Después de mover motores para modificar angMotor[] y mover esa cantidad en lugar de DHbi2[] - Hay que cambiar esto...

  //****************************************************************************************  
  } else if (Option == 9 or Option == 12 or Option == 13 or Option == 14) { // Ejemplo 1-0 (calDHinversoNmotores_1_0) - Brazo completo - Cinco motores. Ecuaciones de DH para Cinemática Inversa.
    //Option = 12 // Ejemplo 1-0  (calDHinversoNmotores_1_0()) - Variante de Teta1 con fallo por no considerar el plano de ataque
    //Option = 13 // Ejemplo 1-0  (calDHinversoNmotores_1_0()) - Variante de Teta3 con fallo por no considerar el plano de ataque
    //Option = 14 // Ejemplo 1-0  (calDHinversoNmotores_1_0()) - Variante de Teta4 sin fallo 
    //double puntoF9[] = {0, 100, 500};  // {0, 0, 631}; // Para cinemática directa
    //double puntoF9[] = {-10, -10, 300}; // Fuera de alcance por no poder girar sobre sí mismo al tener Teta5 algo pequeño. // resulTeta4pgrados_2 = nan
    //double puntoF9[] = {-100, -100, 300}; // Fuera de alcance por no poder girar sobre sí mismo al tener Teta5 algo pequeño. // resulTeta4pgrados_2 = nan
    //double puntoF9[] = {-50, 50, 300}; // Fuera de alcance por no poder girar sobre sí mismo al tener Teta5 algo pequeño. // resulTeta4pgrados_2 = nan
    //double puntoF9[] = {-20, 20, 400}; // Fuera de alcance por no poder girar sobre sí mismo al tener Teta5 algo pequeño. // resulTeta5pgrados = nan
    //double puntoF9[] = {33, -250, 350}; // Y0 positivas a izquierda (90) y negativas a derecha (-90)
    //double puntoF9[] = {200, 200, 300}; // Y0 positivas a izquierda (90) y negativas a derecha (-90) // X0 positivas detrás (90) y negativas delante (-90)
    A = puntoF9[0];
    B = puntoF9[1];
    C = puntoF9[2];
    calDHinversoNmotores_1_0(A, B, C); // calDHinversoNmotores_1_0() - Se calculan los puntos y se buscan mediante calDHinversoNmotores_1_0(), se mueve el brazo y se calculan pro DH para comprobarlo. 
    calDHdirectoNmotores(); // Tanto para Cinemática Directa cuando se ha calculado tras definir los ángulos de los motores, 
                                  // como para Cinemática Inversa al comprobar que el punto calculado coincide con el buscado.
                                  // Después de mover motores para modificar angMotor[] y mover esa cantidad en lugar de DHbi2[] - Hay que cambiar esto...
  Option2 = Option;
  } else if (Option == 10) { // Calcula los puntos de una circunferencia y posicione el brazo en cada punto (grado) mediante Cinemática Inversa
     dibujarCircunferenciaCI_1_0();
     setServos01234();
  } else if (Option == 11) { // Calcula los puntos de un cuadrado y posicione el brazo en los vértices mediante Cinemática Inversa
    dibujarCuadradoCI_1_0(); // dibujarCuadradoCI_1_0() - Se calculan los puntos y se buscan mediante calDHinversoNmotores_1_0(), se mueve el brazo y se calculan pro DH para comprobarlo. 
    setServos01234();
  } 
  
  //****************************************************************************************  
  moverMotores(); //Mueve los motores el giro definido (Cinemática Directa) o el calculado (Cinemática Inversa).
}

void loop() {
  Serial.print("\nComienza un nuevo ciclo de cambio de posición de los servos...");
  delay(300000);
}
